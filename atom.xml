<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lemon-XQ</title>
  <subtitle>Stay Hungry, Stay Foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lemonxq.cn/"/>
  <updated>2017-11-23T07:54:27.717Z</updated>
  <id>http://lemonxq.cn/</id>
  
  <author>
    <name>Lemon-XQ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[自制工具]实现自动推送Hexo博客文章至百度</title>
    <link href="http://lemonxq.cn/2017/11/23/%5B%E8%87%AA%E5%88%B6%E5%B7%A5%E5%85%B7%5D%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81Hexo%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E8%87%B3%E7%99%BE%E5%BA%A6/"/>
    <id>http://lemonxq.cn/2017/11/23/[自制工具]实现自动推送Hexo博客文章至百度/</id>
    <published>2017-11-23T04:50:06.000Z</published>
    <updated>2017-11-23T07:54:27.717Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　我们在博客发布文章时，总是希望百度能尽快收录我们的文章，但是如果傻傻等百度爬虫爬到我们这种小站点的文章……不知道要等到何年何月= =基于此，百度站长平台提供了<strong>主动推送文章至百度的接口</strong>。但是这个接口要求我们先把所有文章的URL一行一个写入urls.txt中。然而还是太麻烦了，每次写完文章还得再自己<strong>手动更新urls.txt</strong>。所以，我用python做了一个小工具，可以一键/一条命令<strong>自动推送所有文章至百度</strong>~适合我这种懒人使用2333<br><a id="more"></a></p>
<h2 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>　　原理其实很简单粗暴——就是写个爬虫爬取你博客里的所有文章URL，然后逐行写入urls.txt，再使用百度站长平台提供的接口完成推送。恩，听上去就是这么简单……然而渣渣如我在制作过程中还是遇到了不少问题，略去不表= =</p>
<h3 id="使用前提"><a href="#使用前提" class="headerlink" title="使用前提"></a>使用前提</h3><ul>
<li>确保电脑中已安装<strong>python</strong>;</li>
<li>确保已安装<strong>pyyaml</strong>模块，安装方法：<code>pip install pyyaml</code></li>
<li>Ubuntu用户请确保已安装<strong>curl</strong>命令，安装方法：<code>sudo apt install curl</code></li>
<li>确保你的博客基于Hexo搭建且主题为<strong>Next | Jacman | Yelee | Apollo</strong>【暂时只测试了这几个主题，后续有需要的话再增加】;</li>
<li>有<a href="http://ziyuan.baidu.com/linksubmit/index" target="_blank" rel="external">百度站长平台</a>账号且已绑定你的博客站点，方法平台里写的很清楚了;</li>
</ul>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="Windows："><a href="#Windows：" class="headerlink" title="Windows："></a>Windows：</h4><ul>
<li>直接在<a href="https://github.com/Lemon-XQ/Hexo-BaiduPushTool" target="_blank" rel="external">我的项目主页</a> <strong>download zip</strong> 或者<strong> git bash</strong>下执行<code>git clone https://github.com/Lemon-XQ/Hexo-BaiduPushTool.git</code></li>
<li>打开<strong>_urlconfig.yml</strong>，填入你的<strong>博客地址、使用主题、百度主动推送接口</strong>，保存</li>
<li>双击<strong>baidupush.bat</strong>文件，等待推送完成</li>
</ul>
<h4 id="Linux："><a href="#Linux：" class="headerlink" title="Linux："></a>Linux：</h4><ul>
<li><code>git clone https://github.com/Lemon-XQ/Hexo-BaiduPushTool.git</code></li>
<li><code>cd Hexo-BaiduPushTool</code></li>
<li><code>vi _urlconfig.yml</code> 填写相应信息后保存退出</li>
<li><code>python BaiduPush.py</code> 等待推送完成</li>
</ul>
<h4 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h4><p><img src="http://okwl1c157.bkt.clouddn.com/baidupush_linux.png" alt=""></p>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>填写配置文件时，请注意yaml语法！即<strong>URL:</strong>后需加一个空格！否则会报错</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>　　源码见<a href="https://github.com/Lemon-XQ/Hexo-BaiduPushTool" target="_blank" rel="external">github</a>，如果有bug或者是建议麻烦跟我说一下啦~如果觉得还行的话给个star就更好啦（比心）~<strong>最后,github求一波互粉呀（逃</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　我们在博客发布文章时，总是希望百度能尽快收录我们的文章，但是如果傻傻等百度爬虫爬到我们这种小站点的文章……不知道要等到何年何月= =基于此，百度站长平台提供了&lt;strong&gt;主动推送文章至百度的接口&lt;/strong&gt;。但是这个接口要求我们先把所有文章的URL一行一个写入urls.txt中。然而还是太麻烦了，每次写完文章还得再自己&lt;strong&gt;手动更新urls.txt&lt;/strong&gt;。所以，我用python做了一个小工具，可以一键/一条命令&lt;strong&gt;自动推送所有文章至百度&lt;/strong&gt;~适合我这种懒人使用2333&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://lemonxq.cn/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://lemonxq.cn/tags/Hexo/"/>
    
      <category term="SEO" scheme="http://lemonxq.cn/tags/SEO/"/>
    
      <category term="Python" scheme="http://lemonxq.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Hexo之静态+动态背景设置</title>
    <link href="http://lemonxq.cn/2017/11/20/Hexo%E4%B9%8B%E9%9D%99%E6%80%81+%E5%8A%A8%E6%80%81%E8%83%8C%E6%99%AF%E8%AE%BE%E7%BD%AE/"/>
    <id>http://lemonxq.cn/2017/11/20/Hexo之静态+动态背景设置/</id>
    <published>2017-11-19T16:27:39.000Z</published>
    <updated>2017-11-19T17:58:58.153Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　实现背景图更换及平铺，以及引入动态背景（可交互）<br><a id="more"></a></p>
<h2 id="静态background设置"><a href="#静态background设置" class="headerlink" title="静态background设置"></a>静态background设置</h2><ol>
<li><p>打开<code>博客根目录/themes/next/source/css/_custom/custom.styl</code>文件，编辑如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">// Custom styles.</div><div class="line">body &#123; </div><div class="line">	background-image: url(/images/background.png);</div><div class="line">	background-attachment: fixed; // 不随屏幕滚动而滚动</div><div class="line">	background-repeat: repeat; // 如果背景图不够屏幕大小则重复铺，改为no-repeat则表示不重复铺</div><div class="line">	background-size: contain; // 等比例铺满屏幕</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>将背景图命名为<strong>background.png</strong>并放入<code>主题根目录/images</code>下</p>
</li>
</ol>
<h2 id="动态可交互背景（js引入）"><a href="#动态可交互背景（js引入）" class="headerlink" title="动态可交互背景（js引入）"></a>动态可交互背景（js引入）</h2><ol>
<li>打开<code>博客根目录/themes/next/layout/_layout.swig</code>文件，在之前添加代码如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.canvas_nest %&#125;</div><div class="line">&lt;script type=&quot;text/javascript&quot;</div><div class="line">color=&quot;0,0,255&quot; opacity=&apos;0.7&apos; zIndex=&quot;-2&quot; count=&quot;99&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure></li>
</ol>
<blockquote>
<p><strong>属性说明：</strong></p>
<ul>
<li><strong>color</strong> ：线条颜色, 默认: ‘0,0,0’；三个数字分别为(R,G,B)</li>
<li><strong>opacity</strong>: 线条透明度（0~1）, 默认: 0.5</li>
<li><strong>count</strong>: 线条的总数量, 默认: 150</li>
<li><strong>zIndex</strong>: 背景的z-index属性，css属性用于控制所在层的位置, 默认: -1</li>
</ul>
</blockquote>
<p>2.打开<code>博客根目录/themes/next/_config.yml</code>，找到字段<strong>canvas_nest</strong>，将其置为<strong>true</strong>【如果没有找到该字段，请自行添加】<br>3.hexo clean , hexo d -g可以看到效果~</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　实现背景图更换及平铺，以及引入动态背景（可交互）&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://lemonxq.cn/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://lemonxq.cn/tags/Hexo/"/>
    
      <category term="JavaScript" scheme="http://lemonxq.cn/tags/JavaScript/"/>
    
      <category term="CSS" scheme="http://lemonxq.cn/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo之使用CodingPages实现全站Https</title>
    <link href="http://lemonxq.cn/2017/11/20/Hexo%E4%B9%8B%E4%BD%BF%E7%94%A8CodingPages%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99Https/"/>
    <id>http://lemonxq.cn/2017/11/20/Hexo之使用CodingPages实现全站Https/</id>
    <published>2017-11-19T16:26:04.000Z</published>
    <updated>2017-11-19T17:56:19.349Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">拒绝让自己的网站成为不安全的网站：）</blockquote></p>
<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　之前博客单线部署在Github Pages的时候，用的是cloudflare提供的SSL证书。但是cloudflare只能绑定一个CNAME记录（而且好像只能绑github.io？），所以后面双线部署（GitHub Pages+Coding Pages）后，cloudflare就不能用了。不过好在Coding Pages提供了通过Let’s Encrypt申请SSL证书进而开启全站HTTPs的方法。下面记录一下步骤~<br><a id="more"></a></p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li>首先确保你的博客已经部署在Coding Pages上并且已经添加CNAME记录，不懂的先参照<a href="https://lemonxq.cn/2017/03/24/Hexo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA+%E4%B8%AA%E4%BA%BA%E5%AE%9A%E5%88%B6/">我的另一篇博客中关于域名绑定的部分</a> </li>
<li>申请SSL证书<br><strong>【注意：如果是Github+Coding双线部署，申请SSL证书前需要先将解析到github.io的CNAME记录暂停！！！不然Let’s Encrypt主机在验证域名所有权时会定位到Github Pages的主机上导致SSL证书申请失败】</strong><br><img src="http://okwl1c157.bkt.clouddn.com/ssl.png" alt=""></li>
<li>等待10分钟左右申请成功</li>
<li>强制开启Https<br><img src="http://okwl1c157.bkt.clouddn.com/https.png" alt=""></li>
</ol>
<h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>开启强制HTTPS访问后，网站内引用资源的URL必须以https:// 开头，避免引用资源加载失败。例如Css文件、JavaScript文件、Image文件。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;拒绝让自己的网站成为不安全的网站：）&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　之前博客单线部署在Github Pages的时候，用的是cloudflare提供的SSL证书。但是cloudflare只能绑定一个CNAME记录（而且好像只能绑github.io？），所以后面双线部署（GitHub Pages+Coding Pages）后，cloudflare就不能用了。不过好在Coding Pages提供了通过Let’s Encrypt申请SSL证书进而开启全站HTTPs的方法。下面记录一下步骤~&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://lemonxq.cn/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://lemonxq.cn/tags/Hexo/"/>
    
      <category term="Https" scheme="http://lemonxq.cn/tags/Https/"/>
    
      <category term="SSL" scheme="http://lemonxq.cn/tags/SSL/"/>
    
      <category term="Coding" scheme="http://lemonxq.cn/tags/Coding/"/>
    
  </entry>
  
  <entry>
    <title>Hexo之使用Livere评论代替多说评论</title>
    <link href="http://lemonxq.cn/2017/11/20/Hexo%E4%B9%8B%E4%BD%BF%E7%94%A8Livere%E8%AF%84%E8%AE%BA%E4%BB%A3%E6%9B%BF%E5%A4%9A%E8%AF%B4%E8%AF%84%E8%AE%BA/"/>
    <id>http://lemonxq.cn/2017/11/20/Hexo之使用Livere评论代替多说评论/</id>
    <published>2017-11-19T16:24:34.000Z</published>
    <updated>2017-11-19T17:01:55.880Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　由于众所周知的原因，多说评论和网易云跟帖先后都宣布关闭评论服务，一直没有找到好的替换方案。昨天无意看到韩国的Livere（来必力）评论，瞬间就喜欢上了~UI好看，加载时候的那个小幽灵也好可爱=w=而且是国外的，应该没那么容易关闭吧2333下面记录一下步骤~<br><a id="more"></a></p>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol>
<li>去<a href="https://livere.com/" target="_blank" rel="external">Livere官网</a>注册Livere账号。</li>
<li>选择City版（免费），安装</li>
<li>进入管理页面-&gt;代码管理-&gt;一般网站，复制data-uid</li>
</ol>
<h2 id="在Hexo中添加Livere"><a href="#在Hexo中添加Livere" class="headerlink" title="在Hexo中添加Livere"></a>在Hexo中添加Livere</h2><p>以下基于主题Next，其他主题做法类似</p>
<ol>
<li>打开<code>博客根目录/themes/next/_config.yml</code></li>
<li><p>将# Third Party Services Settings 栏目下其他评论系统如duoshuo、gentie、youyan、disqus用#注释掉，加入以下内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># Livere评论系统</div><div class="line">livere_uid: 上一步中你获取的data-uid</div></pre></td></tr></table></figure>
</li>
<li><p>在<code>博客根目录/themes/layout/_scripts/third-party/comments/</code>目录中新建txt文件，重命名为livere.swig，编辑内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&#123;% if not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname and not theme.disqus_shortname and not theme.hypercomments_id and not theme.gentie_productKey %&#125;</div><div class="line"></div><div class="line">  &#123;% if theme.livere_uid %&#125;</div><div class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">      (function(d, s) &#123;</div><div class="line">        var j, e = d.getElementsByTagName(s)[0];</div><div class="line">        if (typeof LivereTower === &apos;function&apos;) &#123; return; &#125;</div><div class="line">        j = d.createElement(s);</div><div class="line">        j.src = &apos;https://cdn-city.livere.com/js/embed.dist.js&apos;;</div><div class="line">        j.async = true;</div><div class="line">        e.parentNode.insertBefore(j, e);</div><div class="line">      &#125;)(document, &apos;script&apos;);</div><div class="line">    &lt;/script&gt;</div><div class="line">  &#123;% endif %&#125;</div><div class="line"></div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>在<code>博客根目录/themes/layout/_scripts/third-party/comments.swig</code>文件中追加：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% include &apos;./comments/livere.swig&apos; %&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>在<code>博客根目录/themes/layout/_partials/comments.swig</code>文件中条件最后追加 LiveRe 插件是否引用的判断逻辑：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% elseif theme.livere_uid %&#125;</div><div class="line">      &lt;div id=&quot;lv-container&quot; data-id=&quot;city&quot; data-uid=&quot;&#123;&#123; theme.livere_uid &#125;&#125;&quot;&gt;&lt;/div&gt;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>重新hexo clean、hexo d -g，然后就可以看到来必力评论啦~<br>【PS：不知道为啥我刚部署完的时候评论没有出现……可能要等一会？】</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　由于众所周知的原因，多说评论和网易云跟帖先后都宣布关闭评论服务，一直没有找到好的替换方案。昨天无意看到韩国的Livere（来必力）评论，瞬间就喜欢上了~UI好看，加载时候的那个小幽灵也好可爱=w=而且是国外的，应该没那么容易关闭吧2333下面记录一下步骤~&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://lemonxq.cn/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://lemonxq.cn/tags/Hexo/"/>
    
      <category term="Livere" scheme="http://lemonxq.cn/tags/Livere/"/>
    
  </entry>
  
  <entry>
    <title>实现在Java中执行python代码或py脚本（可传参数）</title>
    <link href="http://lemonxq.cn/2017/11/17/%E5%AE%9E%E7%8E%B0%E5%9C%A8Java%E4%B8%AD%E6%89%A7%E8%A1%8Cpython%E4%BB%A3%E7%A0%81%E6%88%96py%E8%84%9A%E6%9C%AC%EF%BC%88%E5%8F%AF%E4%BC%A0%E5%8F%82%E6%95%B0%EF%BC%89/"/>
    <id>http://lemonxq.cn/2017/11/17/实现在Java中执行python代码或py脚本（可传参数）/</id>
    <published>2017-11-17T09:25:18.000Z</published>
    <updated>2017-11-17T12:43:20.950Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　最近用<strong>Java</strong>写服务端程序时，遇到这样一个需求：需要把<strong>用python写的机器学习算法</strong>部署到服务器上，然后Java执行<strong>py脚本</strong>，并且取得算法执行的结果。在网上找了很久，有些跑不通，有些是基于windows的，我的服务器是<strong>linux</strong>的，遇到了不少坑= =好不容易解决了，记录一下。</p>
<p><strong>注：Web服务器：Tomcat　服务器OS：CentOS 7　开发工具：Eclipse</strong><br><a id="more"></a></p>
<h2 id="直接嵌入python代码-使用PythonInterpreter"><a href="#直接嵌入python代码-使用PythonInterpreter" class="headerlink" title="直接嵌入python代码(使用PythonInterpreter)"></a>直接嵌入python代码(使用PythonInterpreter)</h2><ul>
<li><strong>适用情形：</strong>要嵌入的python代码不长</li>
<li><strong>步骤：</strong><ul>
<li>下载<strong>Jython</strong>，导入jython.jar到项目lib中</li>
<li>引用org.python包</li>
<li>测试代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> javax.script.*;    </div><div class="line"><span class="keyword">import</span> org.python.util.PythonInterpreter;  </div><div class="line"><span class="keyword">import</span> java.io.*;  </div><div class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.System.*;  </div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span>  </span></div><div class="line">&#123;  </div><div class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span>  </span></div><div class="line"> &#123;      </div><div class="line">  PythonInterpreter interpreter = <span class="keyword">new</span> PythonInterpreter();  </div><div class="line">  interpreter.exec(<span class="string">"print "</span>TEST<span class="string">";"</span>);  </div><div class="line"> &#125;</div><div class="line">&#125; </div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h2 id="执行python脚本-使用PythonInterpreter"><a href="#执行python脚本-使用PythonInterpreter" class="headerlink" title="执行python脚本(使用PythonInterpreter)"></a>执行python脚本(使用PythonInterpreter)</h2><ul>
<li><strong>适用情形：</strong>python代码为py文件形式</li>
<li><strong>步骤：</strong><ul>
<li>下载Jython，导入jython.jar到项目lib中</li>
<li>引用org.python包</li>
<li>测试代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> javax.script.*;    </div><div class="line"><span class="keyword">import</span> org.python.util.PythonInterpreter;  </div><div class="line"><span class="keyword">import</span> java.io.*;  </div><div class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.System.*;  </div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span>  </span></div><div class="line">&#123;  </div><div class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span>  </span></div><div class="line"> &#123;      </div><div class="line">  PythonInterpreter interpreter = <span class="keyword">new</span> PythonInterpreter();  </div><div class="line">  InputStream filepy = <span class="keyword">new</span> FileInputStream(<span class="string">"D:\\demo.py"</span>);   </div><div class="line">  interpreter.execfile(filepy);   </div><div class="line">  filepy.close();  </div><div class="line"> &#125;  </div><div class="line">&#125;  </div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h2 id="执行python脚本-使用Runtime-getRuntime-）"><a href="#执行python脚本-使用Runtime-getRuntime-）" class="headerlink" title="执行python脚本(使用Runtime.getRuntime()）"></a>执行python脚本(使用Runtime.getRuntime()）</h2><ul>
<li><strong>适用情形：</strong><ul>
<li>python脚本中<strong>import了外来模块</strong>；</li>
<li>需要<strong>传入数据</strong>给python脚本</li>
<li><strong>PS:</strong>上面两种不知道为啥老是会报错= =所以最后我用的是这种……</li>
</ul>
</li>
<li><strong>测试代码：</strong><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 定义传入参数</span></div><div class="line"><span class="keyword">int</span> age;</div><div class="line"><span class="comment">// 接收python脚本的输出结果</span></div><div class="line"><span class="keyword">int</span> result;</div><div class="line"><span class="comment">// 若Python脚本在windows主机中</span></div><div class="line">String cmdStr_windows = <span class="string">"python D:\\demo.py"</span>+ <span class="string">" "</span> + age;</div><div class="line"><span class="comment">// 若Python脚本在Linux主机中</span></div><div class="line">String cmdStr_linux = <span class="string">"python /home/pythonCode/demo.py"</span>+ <span class="string">" "</span> + age);</div><div class="line"><span class="comment">// 定义缓冲区、正常结果输出流、错误信息输出流</span></div><div class="line"><span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];  </div><div class="line">ByteArrayOutputStream outStream = <span class="keyword">new</span> ByteArrayOutputStream();  </div><div class="line">ByteArrayOutputStream outerrStream = <span class="keyword">new</span> ByteArrayOutputStream();   </div><div class="line"></div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">	proc = Runtime.getRuntime().exec(cmdStr_linux);</div><div class="line">	InputStream errStream = proc.getErrorStream();</div><div class="line">	InputStream stream = proc.getInputStream();</div><div class="line">	</div><div class="line">	<span class="comment">// 流读取与写入</span></div><div class="line">	<span class="keyword">int</span> len = -<span class="number">1</span>;  </div><div class="line">	<span class="keyword">while</span> ((len = errStream.read(buffer)) != -<span class="number">1</span>) &#123;  </div><div class="line">	    outerrStream.write(buffer, <span class="number">0</span>, len);  </div><div class="line">	&#125;  </div><div class="line">	<span class="keyword">while</span> ((len = stream.read(buffer)) != -<span class="number">1</span>) &#123;  </div><div class="line">	    outStream.write(buffer, <span class="number">0</span>, len);  </div><div class="line">	&#125;  </div><div class="line">	proc.waitFor();<span class="comment">// 等待命令执行完成</span></div><div class="line">	</div><div class="line">	<span class="comment">// 打印流信息</span></div><div class="line">	System.out.println(outStream.toString());</div><div class="line">	System.out.println(outerrStream.toString());</div><div class="line">	</div><div class="line">	<span class="comment">// 将接收的输出结果转换为目标类型</span></div><div class="line">	res = Integer.parseInt(outStream.toString());</div><div class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">	e.printStackTrace();</div><div class="line">&#125;</div></pre></td></tr></table></figure></li>
<li><p>demo.py脚本如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line">age = sys.argv[<span class="number">1</span>]</div><div class="line">res = <span class="number">1111</span></div><div class="line"><span class="keyword">print</span> res</div></pre></td></tr></table></figure>
</li>
<li><p><strong>注：</strong></p>
<ul>
<li>若python脚本在Linux主机中，注意文件路径要为<strong>绝对路径</strong>，而且<strong>不能用~代替家目录！！！</strong>必须写成/XX/XXX的形式</li>
<li>若要传递多个参数，需要以<strong>空格</strong>间隔</li>
<li>接收python脚本执行结果可用<strong>java的InputStream</strong>截获控制台输出</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　最近用&lt;strong&gt;Java&lt;/strong&gt;写服务端程序时，遇到这样一个需求：需要把&lt;strong&gt;用python写的机器学习算法&lt;/strong&gt;部署到服务器上，然后Java执行&lt;strong&gt;py脚本&lt;/strong&gt;，并且取得算法执行的结果。在网上找了很久，有些跑不通，有些是基于windows的，我的服务器是&lt;strong&gt;linux&lt;/strong&gt;的，遇到了不少坑= =好不容易解决了，记录一下。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：Web服务器：Tomcat　服务器OS：CentOS 7　开发工具：Eclipse&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Java" scheme="http://lemonxq.cn/categories/Java/"/>
    
    
      <category term="Python" scheme="http://lemonxq.cn/tags/Python/"/>
    
      <category term="Java" scheme="http://lemonxq.cn/tags/Java/"/>
    
      <category term="Tomcat" scheme="http://lemonxq.cn/tags/Tomcat/"/>
    
      <category term="服务端编程" scheme="http://lemonxq.cn/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Windows下迁移指定MySQL数据库至Linux</title>
    <link href="http://lemonxq.cn/2017/11/14/Windows%E4%B8%8B%E8%BF%81%E7%A7%BB%E6%8C%87%E5%AE%9AMySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%87%B3Linux/"/>
    <id>http://lemonxq.cn/2017/11/14/Windows下迁移指定MySQL数据库至Linux/</id>
    <published>2017-11-14T03:13:50.000Z</published>
    <updated>2017-11-14T04:01:55.055Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　最近有个项目，需要把部署在Windows下的mysql数据库迁移到linux服务器中，且只迁移该项目的数据库。记录一下步骤。</p>
<p><strong>注：</strong>本步骤基于<strong>cent os 7</strong>，使用的远程ssh工具为<strong>XShell5</strong>,数据库管理工具为<strong>Navicat for MySQL</strong>。迁移之前请确保两台主机已安装配置好MySQL数据库。<br><a id="more"></a></p>
<h2 id="使用sql脚本文件迁移"><a href="#使用sql脚本文件迁移" class="headerlink" title="使用sql脚本文件迁移"></a>使用sql脚本文件迁移</h2><h3 id="Windows（迁出数据库主机）"><a href="#Windows（迁出数据库主机）" class="headerlink" title="Windows（迁出数据库主机）"></a>Windows（迁出数据库主机）</h3><ol>
<li>打开Navicat，在项目所在数据库处，<strong>右键-&gt;转储SQL文件</strong><br><img src="http://okwl1c157.bkt.clouddn.com/sql_transfer1.png" alt=""></li>
<li>导出sql文件成功<br><img src="http://okwl1c157.bkt.clouddn.com/sql_transfer2.png" alt=""></li>
</ol>
<h3 id="Linux（迁入数据库主机）"><a href="#Linux（迁入数据库主机）" class="headerlink" title="Linux（迁入数据库主机）"></a>Linux（迁入数据库主机）</h3><ol>
<li>打开XShell， <strong>ssh</strong>连接Linux主机（CentOS7）</li>
<li>将windows下导出的sql文件上传至Linux主机中，这里以<strong>XShell</strong>提供的<strong>ZMODEM</strong>文件传输工具为例。<ul>
<li><code>yum install lrzsz</code> 下载远程上传下载工具</li>
<li><code>cd 指定文件夹</code></li>
<li><code>rz</code>上传导出的sql文件（若<strong>上传失败</strong>请使用<code>rz -E</code>命令）</li>
</ul>
</li>
<li>执行sql脚本文件<ul>
<li><code>mysql -u root -p</code> 输入密码后进入mysql命令行</li>
<li><code>create database 项目数据库名;</code></li>
<li><code>use 项目数据库名;</code></li>
<li><code>source 路径/XXX.sql</code></li>
<li>执行成功，<code>show tables;</code>可以看到已经导入的表</li>
</ul>
</li>
</ol>
<h2 id="使用mysqldump命令迁移"><a href="#使用mysqldump命令迁移" class="headerlink" title="使用mysqldump命令迁移"></a>使用mysqldump命令迁移</h2><h3 id="Windows（迁出数据库主机）-1"><a href="#Windows（迁出数据库主机）-1" class="headerlink" title="Windows（迁出数据库主机）"></a>Windows（迁出数据库主机）</h3><ol>
<li>打开cmd，执行mysqldump命令导出dump文件<ul>
<li><code>mysqldump -u root -p test &gt; test.dump</code> </li>
<li>回车后输入密码</li>
</ul>
</li>
<li>导出dump文件成功(包括建表及插入语句等)</li>
</ol>
<h3 id="Linux（迁入数据库主机）-1"><a href="#Linux（迁入数据库主机）-1" class="headerlink" title="Linux（迁入数据库主机）"></a>Linux（迁入数据库主机）</h3><ol>
<li>打开XShell， <strong>ssh</strong>连接Linux主机（CentOS7）</li>
<li>将windows下导出的dump文件上传至Linux主机中，步骤同上</li>
<li>从备份的dump文件恢复数据库<ul>
<li><code>mysql test &lt; test.dump</code></li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　最近有个项目，需要把部署在Windows下的mysql数据库迁移到linux服务器中，且只迁移该项目的数据库。记录一下步骤。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;本步骤基于&lt;strong&gt;cent os 7&lt;/strong&gt;，使用的远程ssh工具为&lt;strong&gt;XShell5&lt;/strong&gt;,数据库管理工具为&lt;strong&gt;Navicat for MySQL&lt;/strong&gt;。迁移之前请确保两台主机已安装配置好MySQL数据库。&lt;br&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://lemonxq.cn/categories/MySQL/"/>
    
    
      <category term="Linux" scheme="http://lemonxq.cn/tags/Linux/"/>
    
      <category term="CentOS7" scheme="http://lemonxq.cn/tags/CentOS7/"/>
    
      <category term="MySQL" scheme="http://lemonxq.cn/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Unity对象池技术（原理+实战）</title>
    <link href="http://lemonxq.cn/2017/08/13/Unity%E5%AF%B9%E8%B1%A1%E6%B1%A0%E6%8A%80%E6%9C%AF%EF%BC%88%E5%8E%9F%E7%90%86-%E5%AE%9E%E6%88%98%EF%BC%89/"/>
    <id>http://lemonxq.cn/2017/08/13/Unity对象池技术（原理-实战）/</id>
    <published>2017-08-13T05:30:19.000Z</published>
    <updated>2017-08-13T12:47:07.366Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　很早就听说过对象池技术……然而一直到这几天才真正去了解= =。还得感谢Jasper Flick的博客，这里推荐他的<a href="http://catlikecoding.com/unity/tutorials/" target="_blank" rel="external">Unity C# Tutorials系列</a>，目前我只看了前几篇，收获还是挺大的~本篇博客也是基于这个系列中的一篇——<a href="http://catlikecoding.com/unity/tutorials/object-pools/" target="_blank" rel="external">Object Pools</a>，加上个人的一些理解，对Unity的对象池技术进行简单介绍。<br><a id="more"></a></p>
<h2 id="对象池简介"><a href="#对象池简介" class="headerlink" title="对象池简介"></a>对象池简介</h2><p>　　顾名思义，对象池是存放对象的<strong>缓冲区</strong>。用户可以从缓冲区中<strong>放入/取出</strong>对象。一类对象池存放一类特定的对象。那么对象池有什么用呢？在游戏中，经常会有<strong>产生/销毁</strong>大量<strong>同类</strong>游戏对象的需求，比如游戏中源源不断的敌人、频繁刷新的宝箱、乃至一些游戏特效（风、雨等）。如果没有一种比较好的机制来管理这些对象的产生和销毁，而是一昧的Instantiate和Destroy，将使你的<strong>游戏性能</strong>大大下降，甚至出现卡死、崩溃……</p>
<h2 id="对象池实现"><a href="#对象池实现" class="headerlink" title="对象池实现"></a>对象池实现</h2><p>　　简而言之，就是当需要使用一个对象的时候，直接从该类对象的对象池中取出（<strong>SetActive(true)</strong>），如果对象池中无可用对象，再进行Instantitate。而当不再需要该对象时，不直接进行Destroy,而是<strong>SetActive(false)</strong>并将其回收到对象池中。下面直接贴下代码：</p>
<h3 id="PooledObject-cs"><a href="#PooledObject-cs" class="headerlink" title="PooledObject.cs"></a>PooledObject.cs</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> UnityEngine;</div><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line"><span class="comment"><span class="doctag">///</span> 所有需要使用对象池机制的对象的基类</span></div><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PooledObject</span> : <span class="title">MonoBehaviour</span></div><div class="line">&#123;</div><div class="line">    <span class="comment">// 归属的池</span></div><div class="line">    <span class="keyword">public</span> ObjectPool Pool &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 场景中某个具体的池（不可序列化）</span></div><div class="line">    [System.NonSerialized]</div><div class="line">    <span class="keyword">private</span> ObjectPool poolInstanceForPrefab;</div><div class="line"></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> 回收对象到对象池中</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ReturnToPool</span>(<span class="params"></span>)</span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (Pool)</div><div class="line">        &#123;</div><div class="line">            Pool.AddObject(<span class="keyword">this</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            Destroy(gameObject);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> 返回对象池中可用对象的实例</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="keyword">public</span> T GetPooledInstance&lt;T&gt;() <span class="keyword">where</span> T : PooledObject</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (!poolInstanceForPrefab)</div><div class="line">        &#123;</div><div class="line">            poolInstanceForPrefab = ObjectPool.GetPool(<span class="keyword">this</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> (T)poolInstanceForPrefab.GetObject();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="ObjectPool-cs"><a href="#ObjectPool-cs" class="headerlink" title="ObjectPool.cs"></a>ObjectPool.cs</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> UnityEngine;</div><div class="line"><span class="keyword">using</span> System.Collections.Generic;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ObjectPool</span> : <span class="title">MonoBehaviour</span></div><div class="line">&#123;</div><div class="line">    <span class="comment">// 池中对象prefab</span></div><div class="line">    <span class="keyword">private</span> PooledObject prefab;</div><div class="line"></div><div class="line">    <span class="comment">// 存储可用对象的缓冲区</span></div><div class="line">    <span class="keyword">private</span> List&lt;PooledObject&gt; availableObjects = <span class="keyword">new</span> List&lt;PooledObject&gt;();</div><div class="line"></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> 从池中取出对象，返回该对象</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="function"><span class="keyword">public</span> PooledObject <span class="title">GetObject</span>(<span class="params"></span>)</span></div><div class="line">    &#123;</div><div class="line">        PooledObject obj;</div><div class="line">        <span class="keyword">int</span> lastAvailableIndex = availableObjects.Count - <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> (lastAvailableIndex &gt;= <span class="number">0</span>)</div><div class="line">        &#123;</div><div class="line">            obj = availableObjects[lastAvailableIndex];</div><div class="line">            availableObjects.RemoveAt(lastAvailableIndex);</div><div class="line">            obj.gameObject.SetActive(<span class="literal">true</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="comment">// 池中无可用obj</span></div><div class="line">        &#123;</div><div class="line">            obj = Instantiate&lt;PooledObject&gt;(prefab);</div><div class="line">            obj.transform.SetParent(transform, <span class="literal">false</span>);</div><div class="line">            obj.Pool = <span class="keyword">this</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> obj;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> 向池中放入obj</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AddObject</span>(<span class="params">PooledObject obj</span>)</span></div><div class="line">    &#123;</div><div class="line">        obj.gameObject.SetActive(<span class="literal">false</span>);</div><div class="line">        availableObjects.Add(obj);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> 【静态方法】创建并返回对象所属的对象池</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ObjectPool <span class="title">GetPool</span>(<span class="params">PooledObject prefab</span>)</span></div><div class="line">    &#123;</div><div class="line">        GameObject obj;</div><div class="line">        ObjectPool pool;</div><div class="line">        <span class="comment">// 编辑器模式下检查是否有同名pool存在，防止重复创建pool</span></div><div class="line">        <span class="keyword">if</span> (Application.isEditor)</div><div class="line">        &#123;</div><div class="line">            obj = GameObject.Find(prefab.name + <span class="string">" Pool"</span>);</div><div class="line">            <span class="keyword">if</span> (obj)</div><div class="line">            &#123;</div><div class="line">                pool = obj.GetComponent&lt;ObjectPool&gt;();</div><div class="line">                <span class="keyword">if</span> (pool)</div><div class="line">                &#123;</div><div class="line">                    <span class="keyword">return</span> pool;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        obj = <span class="keyword">new</span> GameObject(prefab.name + <span class="string">" Pool"</span>);</div><div class="line">        DontDestroyOnLoad(obj);</div><div class="line">        pool = obj.AddComponent&lt;ObjectPool&gt;();</div><div class="line">        pool.prefab = prefab;</div><div class="line">        <span class="keyword">return</span> pool;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="实战：七彩喷泉"><a href="#实战：七彩喷泉" class="headerlink" title="实战：七彩喷泉"></a>实战：七彩喷泉</h2><p>【注：以下译至前面提到的<a href="http://catlikecoding.com/unity/tutorials/object-pools/" target="_blank" rel="external">Object Pools</a>一文，有部分删减】</p>
<h3 id="1-实现效果："><a href="#1-实现效果：" class="headerlink" title="1.实现效果："></a>1.实现效果：</h3><embed type="video/mp4" allowscriptaccess="always" allowfullscreen="true" wmode="transparent" quality="high" height="300" width="480" src="https://fat.gfycat.com/QueasyPessimisticDugong.mp4">

<h3 id="2-生成大量物体"><a href="#2-生成大量物体" class="headerlink" title="2.生成大量物体"></a>2.生成大量物体</h3><ul>
<li>首先新建脚本Stuff.cs，代码如下：<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> UnityEngine;</div><div class="line"></div><div class="line">[RequireComponent(<span class="keyword">typeof</span>(Rigidbody))]</div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Stuff</span> : <span class="title">MonoBehaviour</span> &#123;</div><div class="line"></div><div class="line">	Rigidbody body;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">Awake</span> (<span class="params"></span>) </span>&#123;</div><div class="line">		body = GetComponent&lt;Rigidbody&gt;();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li>
<li>创建Cube和Sphere，挂上Stuff脚本。并将它们做成Prefab</li>
<li>接下来需要创建StuffSpawner（孵化器），并挂上StuffSpawner脚本，代码如下：<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> UnityEngine;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">StuffSpawner</span> : <span class="title">MonoBehaviour</span> &#123;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">float</span> timeBetweenSpawns;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> Stuff[] stuffPrefabs;</div><div class="line"></div><div class="line">	<span class="keyword">float</span> timeSinceLastSpawn;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">FixedUpdate</span> (<span class="params"></span>) </span>&#123;</div><div class="line">		timeSinceLastSpawn += Time.deltaTime;</div><div class="line">		<span class="keyword">if</span> (timeSinceLastSpawn &gt;= timeBetweenSpawns) &#123;</div><div class="line">			timeSinceLastSpawn -= timeBetweenSpawns;</div><div class="line">			SpawnStuff();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">SpawnStuff</span> (<span class="params"></span>) </span>&#123;</div><div class="line">		Stuff prefab = stuffPrefabs[Random.Range(<span class="number">0</span>, stuffPrefabs.Length)];</div><div class="line">		Stuff spawn = Instantiate&lt;Stuff&gt;(prefab);</div><div class="line">		spawn.transform.localPosition = transform.position;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<img src="http://catlikecoding.com/unity/tutorials/object-pools/spawning-lots-of-stuff/spawner.png" alt=""></li>
<li>现在我们有了孵化器，可以在一个点产生Cube和Sphere，但这还不够。我们可以给这些stuff一个初始速度及方向。<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">float</span> velocity;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">SpawnStuff</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	Stuff prefab = stuffPrefabs[Random.Range(<span class="number">0</span>, stuffPrefabs.Length)];</div><div class="line">	Stuff spawn = Instantiate&lt;Stuff&gt;(prefab);</div><div class="line">	spawn.transform.localPosition = transform.position;</div><div class="line">	spawn.Body.velocity = transform.up * velocity;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li>
<li>运行一下可以发现一个个物体上升又下降，周而复始。如果你倾斜一下孵化器，会让它看上去更像流动的物体。事实上，如果我们把多个孵化器分布在一个环上，将得到类似喷泉的效果。因此，新建一个空物体StuffSpawnerRing，挂上如下脚本：<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> UnityEngine;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">StuffSpawnerRing</span> : <span class="title">MonoBehaviour</span> &#123;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">int</span> numberOfSpawners;</div><div class="line">	</div><div class="line">	<span class="keyword">public</span> <span class="keyword">float</span> radius, tiltAngle;</div><div class="line">	</div><div class="line">	<span class="keyword">public</span> StuffSpawner spawnerPrefab;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">Awake</span> (<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numberOfSpawners; i++) &#123;</div><div class="line">			CreateSpawner(i);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">CreateSpawner</span> (<span class="params"><span class="keyword">int</span> index</span>) </span>&#123;</div><div class="line">		Transform rotater = <span class="keyword">new</span> GameObject(<span class="string">"Rotater"</span>).transform;</div><div class="line">		rotater.SetParent(transform, <span class="literal">false</span>);</div><div class="line">		rotater.localRotation =</div><div class="line">			Quaternion.Euler(<span class="number">0</span>f, index * <span class="number">360</span>f / numberOfSpawners, <span class="number">0</span>f);</div><div class="line"></div><div class="line">		StuffSpawner spawner = Instantiate&lt;StuffSpawner&gt;(spawnerPrefab);</div><div class="line">		spawner.transform.SetParent(rotater, <span class="literal">false</span>);</div><div class="line">		spawner.transform.localPosition = <span class="keyword">new</span> Vector3(<span class="number">0</span>f, <span class="number">0</span>f, radius);</div><div class="line">		spawner.transform.localRotation = Quaternion.Euler(tiltAngle, <span class="number">0</span>f, <span class="number">0</span>f);</div><div class="line">	&#125;</div></pre></td></tr></table></figure></li>
<li>现在将场景中的Spawner做成prefab并删除，调整SpawnerRing的参数<br><img src="http://catlikecoding.com/unity/tutorials/object-pools/spawning-lots-of-stuff/ring.png" alt=""><h3 id="3-添加销毁区（KillZone）"><a href="#3-添加销毁区（KillZone）" class="headerlink" title="3.添加销毁区（KillZone）"></a>3.添加销毁区（KillZone）</h3></li>
<li>我们现在得到了无止尽生成的下落的物体。为了防止程序卡顿，我们需要引入销毁区。所有进入销毁区的物体都要被销毁。</li>
<li>创建一个带有Box Collider的物体，设置为触发器，为Collider设置一个非常大的size（如1000），并将其放置在喷泉下方某个位置。最后给该物体添加一个Tag以便能被正确识别<br><img src="http://catlikecoding.com/unity/tutorials/object-pools/spawning-lots-of-stuff/kill-zone.png" alt=""></li>
<li>重新编辑Stuff.cs，添加触发器事件处理<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnTriggerEnter</span> (<span class="params">Collider enteredCollider</span>) </span>&#123;</div><div class="line">	<span class="keyword">if</span> (enteredCollider.CompareTag(<span class="string">"Kill Zone"</span>)) &#123;</div><div class="line">		Destroy(gameObject);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="4-加入可变因素"><a href="#4-加入可变因素" class="headerlink" title="4.加入可变因素"></a>4.加入可变因素</h3><ul>
<li>目前我们的喷泉缺少随机性，我们可以用随机值代替固定值。因为我们要处理多个数据，所以让我们创建一个结构体来更好地实现随机化。<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> UnityEngine;</div><div class="line"></div><div class="line">[System.Serializable]</div><div class="line"><span class="keyword">public</span> <span class="keyword">struct</span> FloatRange &#123;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">float</span> min, max;</div><div class="line">	</div><div class="line">	<span class="keyword">public</span> <span class="keyword">float</span> RandomInRange &#123;</div><div class="line">		<span class="keyword">get</span> &#123;</div><div class="line">			<span class="keyword">return</span> Random.Range(min, max);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li>
<li><strong>随机化生成时间</strong><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> FloatRange timeBetweenSpawns;</div><div class="line"></div><div class="line"><span class="keyword">float</span> currentSpawnDelay;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">FixedUpdate</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	timeSinceLastSpawn += Time.deltaTime;</div><div class="line">	<span class="keyword">if</span> (timeSinceLastSpawn &gt;= currentSpawnDelay) &#123;</div><div class="line">		timeSinceLastSpawn -= currentSpawnDelay;</div><div class="line">		currentSpawnDelay = timeBetweenSpawns.RandomInRange;</div><div class="line">		SpawnStuff();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<img src="http://catlikecoding.com/unity/tutorials/object-pools/adding-variation/spawn-time-range.png" alt=""></li>
<li><strong>随机化物体scale和rotation</strong><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> FloatRange timeBetweenSpawns, scale;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">SpawnStuff</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	Stuff prefab = stuffPrefabs[Random.Range(<span class="number">0</span>, stuffPrefabs.Length)];</div><div class="line">	Stuff spawn = Instantiate&lt;Stuff&gt;(prefab);</div><div class="line">	</div><div class="line">	spawn.transform.localPosition = transform.position;</div><div class="line">	spawn.transform.localScale = Vector3.one * scale.RandomInRange;</div><div class="line">	spawn.transform.localRotation = Random.rotation;</div><div class="line">	</div><div class="line">	spawn.Body.velocity = transform.up * velocity;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<img src="http://catlikecoding.com/unity/tutorials/object-pools/adding-variation/scale-range.png" alt=""></li>
<li><strong>随机化物体速度大小</strong><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> FloatRange timeBetweenSpawns, scale, randomVelocity;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">SpawnStuff</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	…</div><div class="line">	</div><div class="line">	spawn.Body.velocity = transform.up * velocity +</div><div class="line">		Random.onUnitSphere * randomVelocity.RandomInRange;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<img src="http://catlikecoding.com/unity/tutorials/object-pools/adding-variation/random-velocity-range.png" alt=""></li>
<li><strong>随机化物体角速度</strong><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">SpawnStuff</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	…</div><div class="line"></div><div class="line">	spawn.Body.velocity = transform.up * velocity +</div><div class="line">		Random.onUnitSphere * randomVelocity.RandomInRange;</div><div class="line">	spawn.Body.angularVelocity =</div><div class="line">		Random.onUnitSphere * angularVelocity.RandomInRange;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<img src="http://catlikecoding.com/unity/tutorials/object-pools/adding-variation/angular-velocity-range.png" alt=""></li>
<li><strong>随机化材质（实现七彩）</strong><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> Material[] stuffMaterials;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateSpawner</span> (<span class="params"><span class="keyword">int</span> index</span>) </span>&#123;</div><div class="line">	…</div><div class="line"></div><div class="line">	spawner.stuffMaterial = stuffMaterials[index % stuffMaterials.Length];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<img src="http://catlikecoding.com/unity/tutorials/object-pools/adding-variation/ring-materials.png" alt=""></li>
</ul>
<h3 id="5-应用对象池进行管理"><a href="#5-应用对象池进行管理" class="headerlink" title="5.应用对象池进行管理"></a>5.应用对象池进行管理</h3><ul>
<li>让Stuff继承PooledObject(PooledObject代码见前)，修改触发器事件，进入销毁区时不Destroy，而是调用ReturnToPool方法。</li>
<li>接下来，我们需要改变StuffSpawner来让它使用对象池来创建对象，而不是直接Instanstiate。如何做到呢？某种程度上我们需要拥有每个prefab的池，但我们不想要重复的池，也就是说所有孵化器都共享他们。当然，如果我们能直接从一个prefab得到一个池化的实例而不用考虑那些池本身将更加方便。<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">SpawnStuff</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	Stuff prefab = stuffPrefabs[Random.Range(<span class="number">0</span>, stuffPrefabs.Length)];</div><div class="line">	Stuff spawn = prefab.GetPooledInstance&lt;Stuff&gt;();</div><div class="line"></div><div class="line">	…</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol>
<li>并非<strong>所有的</strong>对象都适合使用对象池来管理。需要在“<strong>对象生成的开销</strong>”以及“<strong>维护对象池的开销</strong>”之间进行权衡。</li>
<li>为避免在场景切换时重新生成pool，从而带来性能损耗，可在代码中加入<strong>DontDestroyOnLoad(pool)</strong></li>
<li>同样，在场景切换时，应该将原场景中的对象回收进相应对象池中。即在<strong>OnLevelWasLoaded</strong>方法中调用<strong>ReturnToPool</strong>方法</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　很早就听说过对象池技术……然而一直到这几天才真正去了解= =。还得感谢Jasper Flick的博客，这里推荐他的&lt;a href=&quot;http://catlikecoding.com/unity/tutorials/&quot;&gt;Unity C# Tutorials系列&lt;/a&gt;，目前我只看了前几篇，收获还是挺大的~本篇博客也是基于这个系列中的一篇——&lt;a href=&quot;http://catlikecoding.com/unity/tutorials/object-pools/&quot;&gt;Object Pools&lt;/a&gt;，加上个人的一些理解，对Unity的对象池技术进行简单介绍。&lt;br&gt;
    
    </summary>
    
      <category term="Unity" scheme="http://lemonxq.cn/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://lemonxq.cn/tags/Unity/"/>
    
      <category term="对象池" scheme="http://lemonxq.cn/tags/%E5%AF%B9%E8%B1%A1%E6%B1%A0/"/>
    
      <category term="翻译" scheme="http://lemonxq.cn/tags/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>ulua热更新小试</title>
    <link href="http://lemonxq.cn/2017/05/01/ulua%E7%83%AD%E6%9B%B4%E6%96%B0%E5%B0%8F%E8%AF%95/"/>
    <id>http://lemonxq.cn/2017/05/01/ulua热更新小试/</id>
    <published>2017-05-01T14:50:09.000Z</published>
    <updated>2017-05-22T14:44:06.358Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">传说中的热更新在Unity中是怎样实现的:)</blockquote></p>
<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　热更新技术在游戏行业可以说是大名鼎鼎了，虽然苹果前段时间禁止了JSPatch等热更新技术，但目前来看，苹果并没有禁止游戏引擎的热更新技术。某种程度上说明了热更新在游戏中的重要性。而ulua作为一款优秀的unity3d热更新插件，完美解决了Unity游戏热更新的问题。<br><a id="more"></a></p>
<h2 id="什么是热更新"><a href="#什么是热更新" class="headerlink" title="什么是热更新"></a>什么是热更新</h2><p>　　热更新一般用于网络游戏中。其指的是在不重新下载客户端的情况下，对游戏的内容进行更新（包括资源更新或逻辑更新等）。知乎上对热更新有一个很形象的比喻：假设你的卡车开到了150KM/H，然后有个轮胎爆了。司机说，你就直接换吧，我不停车。你小心点换。热更新机制大概就是这个意思。</p>
<h2 id="什么是Lua"><a href="#什么是Lua" class="headerlink" title="什么是Lua"></a>什么是Lua</h2><p>　　Lua是一款<strong>轻巧</strong>的脚本语言，由<strong>标准C</strong>编写而成，代码简洁优美，几乎在所有操作系统和平台上都可以编译，运行。在目前所有脚本引擎中，Lua的<strong>速度是最快</strong>的。这一切都决定了Lua是作为<strong>嵌入式脚本</strong>的最佳选择。（嗯这段其实是百度的orz…）</p>
<p>　　Lua代码都是运行时才编译的，不运行的时候就如同一张图片、一段音频一样，都是文件；所以更新逻辑只需要更新脚本，不需要再编译，因而Lua能轻松实现“热更新”。Ulua是一款非常实用的unity插件，它能让unity支持Lua语言，而且运行效率还不错。</p>
<h2 id="使用ulua进行热更新"><a href="#使用ulua进行热更新" class="headerlink" title="使用ulua进行热更新"></a>使用ulua进行热更新</h2><h3 id="1-安装ulua插件-及-Lua编写工具LuaStudio"><a href="#1-安装ulua插件-及-Lua编写工具LuaStudio" class="headerlink" title="1.安装ulua插件 及 Lua编写工具LuaStudio"></a>1.安装ulua插件 及 Lua编写工具LuaStudio</h3><ul>
<li>ulua下载地址：<a href="http://ulua.org/" target="_blank" rel="external">http://ulua.org/</a></li>
<li>LuaStudio下载地址：<a href="https://pan.baidu.com/s/1hsabx0w" target="_blank" rel="external">https://pan.baidu.com/s/1hsabx0w</a> 密码: kqvp</li>
</ul>
<h3 id="2-新建Unity工程，将ulua导入工程中"><a href="#2-新建Unity工程，将ulua导入工程中" class="headerlink" title="2.新建Unity工程，将ulua导入工程中"></a>2.新建Unity工程，将ulua导入工程中</h3><h3 id="3-ulua中的使用流程"><a href="#3-ulua中的使用流程" class="headerlink" title="3.ulua中的使用流程"></a>3.ulua中的使用流程</h3><ul>
<li>实例化LuaState对象（new LuaState()）,一个LuaState对象代表一个Lua解释器</li>
<li>加载Lua代码（LuaState.DoString(string)），string为Lua代码字符串或Lua脚本文件名称<strong>（推荐使用后者）</strong></li>
<li>调用Lua代码中的方法（GetFunction string）,LuaFunction.callFunction(string)</li>
<li><strong>注：</strong>由于Unity不支持扩展名为lua的文件，所以可将Lua脚本扩展名定为txt（纯文本文件）,并用unity的<strong>TextAsset</strong>列表负责记录所有脚本文件。建议列表中给每个脚本搭配一个string类型的ID，这样凭此ID即可加载正确的lua脚本；另外在LuaState类中新增一个String类型的public成员，赋值为该ID。这样一旦某个Lua脚本在运行时报错，可根据输出的ID值判断是哪个Lua脚本有错误。</li>
</ul>
<h3 id="4-ulua框架在Unity中的使用（SimpleFramework-UGUI解读）"><a href="#4-ulua框架在Unity中的使用（SimpleFramework-UGUI解读）" class="headerlink" title="4.ulua框架在Unity中的使用（SimpleFramework_UGUI解读）"></a>4.ulua框架在Unity中的使用（SimpleFramework_UGUI解读）</h3><ul>
<li><strong>框架启动</strong><ul>
<li>GlobalGenerator:初始化游戏环境,包括添加AppView,启动<strong>pureMVC</strong>框架，添加各种Manager</li>
<li>GameManager中对资源进行更新处理</li>
</ul>
</li>
<li><strong>资源初始化过程 </strong>OnResourceInited<ul>
<li>加载网络、游戏管理器的Lua脚本</li>
<li>调用GameManager.lua里的LuaScriptPanel方法（CallMethod通过LuaScriptMgr.cs的CallLuaFunction()将控制权移交给GameManager.lua）</li>
<li>创建Lua面板（Message、Prompt）</li>
<li>调用方法OnInitOK表示初始化成功</li>
</ul>
</li>
<li>ulua框架的执行顺序：<ul>
<li>每个UI Panel对应<strong>View</strong>下的lua代码，用来获取一些需要交互的属性</li>
<li>每个UIprefab通过<strong>Controller</strong>进行控制，包括其实例化以及组件的一些行为，比如OnCreate事件</li>
</ul>
</li>
</ul>
<h2 id="热更新案例：UI面板更新"><a href="#热更新案例：UI面板更新" class="headerlink" title="热更新案例：UI面板更新"></a>热更新案例：UI面板更新</h2><h3 id="创建开发UI界面"><a href="#创建开发UI界面" class="headerlink" title="创建开发UI界面"></a>创建开发UI界面</h3><ul>
<li>设计UI Panel<br><img src="http://okwl1c157.bkt.clouddn.com/panelDemo" alt=""></li>
<li>将UI panel做成prefab,进行<strong>打包</strong>（注意<strong>后缀一定为.assetbundle</strong>）</li>
<li>将UI panel所用到的所有UI资源进行打包（图片、字体等），最好分类打包</li>
<li>点击<strong>Game-Build XXX Resources</strong>(XXX 代表想要发布到的平台)</li>
<li>创建<strong>Global Generator</strong>（空Object上挂Global Generator脚本）</li>
<li>重写Logic文件夹中的<strong>GameManager.lua</strong>脚本<figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span> <span class="string">"Common/define"</span> <span class="comment">--引入AppConst,NetManager的定义</span></div><div class="line"><span class="built_in">require</span> <span class="string">"Controller/BottomCtrl"</span> <span class="comment">--以下引入对各子面板的控制器</span></div><div class="line"><span class="built_in">require</span> <span class="string">"Controller/SettingsCtrl"</span></div><div class="line"><span class="built_in">require</span> <span class="string">"Controller/DialogCtrl"</span></div><div class="line"></div><div class="line">GameManager = &#123;&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">GameManager.LuaScriptPanel</span><span class="params">()</span></span></div><div class="line">	<span class="keyword">return</span> <span class="string">'Bottom'</span>,<span class="string">'Settings'</span>,<span class="string">'Dialog'</span>; <span class="comment">--Prefab中除掉“Panel”后的名字</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">GameManager.OnInitOK</span><span class="params">()</span></span></div><div class="line">	<span class="comment">--加载网络</span></div><div class="line">	AppConst.SocketPort = <span class="number">2012</span>; <span class="comment">--设置套接字端口号</span></div><div class="line">    AppConst.SocketAddress = <span class="string">"127.0.0.1"</span>; <span class="comment">--设置套接字IP地址，这里默认从主机下载资源</span></div><div class="line">    NetManager:SendConnect(); <span class="comment">--建立连接</span></div><div class="line">	</div><div class="line">	BottomCtrl.Awake();</div><div class="line">	SettingsCtrl.Awake();</div><div class="line">	DialogCtrl.Awake();</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure></li>
<li>View文件夹下<strong>创建子面板的lua脚本</strong>（以BottomPanel.lua为例，其他同理）<figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">BottomPanel = &#123;&#125;</div><div class="line"></div><div class="line"><span class="keyword">local</span> this = BottomPanel</div><div class="line"><span class="keyword">local</span> gameObject</div><div class="line"><span class="keyword">local</span> transform</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">BottomPanel.Awake</span><span class="params">(obj)</span></span></div><div class="line">	<span class="comment">--对局部变量进行赋值</span></div><div class="line">	gameObject = obj;</div><div class="line">	transform = gameObject.transform</div><div class="line">	</div><div class="line">	this.InitPanel();<span class="comment">--初始化面板</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">BottomPanel.InitPanel</span><span class="params">()</span></span></div><div class="line">	<span class="comment">--给面板中的三个Button赋值</span></div><div class="line">	this.buttonSettings = transform:FindChild(<span class="string">"ButtonSetting"</span>).gameObject;</div><div class="line">	this.buttonPeople = transform:FindChild(<span class="string">"ButtonPeople"</span>).gameObject;</div><div class="line">	this.buttonDialog = transform:FindChild(<span class="string">"ButtonDialog"</span>).gameObject;</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure></li>
<li><strong>[可选]</strong>给SettingPanel下的BG添加动画：由小变大动画、隐藏动画、激活动画</li>
<li>重写SettingPanel.lua脚本获取UI中的组件<figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">SettingsPanel = &#123;&#125;</div><div class="line"></div><div class="line"><span class="keyword">local</span> this = SettingsPanel</div><div class="line"><span class="keyword">local</span> transform</div><div class="line"><span class="keyword">local</span> gameObject</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">SettingsPanel.Awake</span><span class="params">(obj)</span></span></div><div class="line">	gameObject = obj;</div><div class="line">	transform = gameObject.transform;</div><div class="line">	</div><div class="line">    this.InitPanel();</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">SettingsPanel.InitPanel</span><span class="params">()</span></span></div><div class="line">	<span class="comment">--获取动画组件及按钮组件</span></div><div class="line">	this.anim = transform:FindChild(<span class="string">"Bg"</span>):GetComponent(<span class="string">"Animator"</span>);</div><div class="line">	this.buttonClose = transform:FindChild(<span class="string">"Bg/ButtonClose"</span>).gameObject;</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure></li>
<li>开发Controller控制层下的Lua代码，控制UI控件的产生和事件的监听（以BottomCtrl.lua为例）<figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span> <span class="string">"Common/define"</span></div><div class="line"></div><div class="line">BottomCtrl = &#123;&#125;</div><div class="line"></div><div class="line"><span class="keyword">local</span> this = BottomCtrl</div><div class="line"><span class="keyword">local</span> gameObject</div><div class="line"><span class="keyword">local</span> transform</div><div class="line"><span class="keyword">local</span> lua</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">BottomCtrl.New</span><span class="params">()</span></span></div><div class="line">	<span class="keyword">return</span> this;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">BottomCtrl.Awake</span><span class="params">()</span></span></div><div class="line">	<span class="comment">--调用panel的创建方法创建相应面板，注意面板命名为XXPanel</span></div><div class="line">	PanelManager:CreatePanel(<span class="string">"Bottom"</span>,this.OnCreate)</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">BottomCtrl.OnCreate</span><span class="params">(obj)</span></span></div><div class="line">	gameObject = obj;</div><div class="line">	transform = obj.transform</div><div class="line">	</div><div class="line">	lua = gameObject:GetComponent(<span class="string">"LuaBehaviour"</span>);</div><div class="line">	<span class="comment">--注册按钮，绑定事件</span></div><div class="line">	lua:AddClick(BottomPanel.buttonDialog,this.OnButtonDialogClick);</div><div class="line">	lua:AddClick(BottomPanel.buttonPeople,this.OnButtonPeopleClick);</div><div class="line">	lua:AddClick(BottomPanel.buttonSettings,this.OnButtonSettingsClick);</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">BottomCtrl.OnButtonDialogClick</span><span class="params">()</span></span></div><div class="line">	DialogCtrl.Show();</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">BottomCtrl.OnButtonPeopleClick</span><span class="params">()</span></span></div><div class="line">	</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">BottomCtrl.OnButtonSettingsClick</span><span class="params">()</span></span></div><div class="line">	SettingsCtrl.Show();</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure></li>
<li>发布到手机上，启动Server<ul>
<li>Switch Platform - Android</li>
<li>Lua-Clear Wrap Files</li>
<li>Lua-Gen Wrap Files</li>
<li>Game-Build Android Resources</li>
<li>修改AppConst.cs里的UpdateMode=true,DebugMode=false,WebUrl=局域网地址（有服务器的话就是服务器地址,这里假设用uLua自带服务器运行）</li>
<li>打开Server.sln-HttpServer.cs，修改host,重新生成工程</li>
<li>运行ulua文件夹下Server/Server/bin/Debug/SuperSocket.SocketService.exe（以管理员权限运行），选择r运行服务器</li>
</ul>
</li>
<li>进行Lua代码的更新<ul>
<li>Build &amp; run,手机连电脑，将程序发布到手机</li>
<li>更改Lua代码</li>
<li>重新Build Android Resources</li>
<li>手机重新启动该程序</li>
<li>解包完成！更新完成！</li>
</ul>
</li>
<li>进行UI资源的更新<ul>
<li>创建Dialog Panel,打包，新建Panel,Ctrl脚本文件</li>
<li>重新Build Android Resources</li>
<li>手机重新启动软件<br><strong>注意：</strong>如果电脑防火墙没关，手机是没有权限访问电脑的，就会更新失败。。。</li>
</ul>
</li>
</ul>
<h2 id="Unity3D中的热更新"><a href="#Unity3D中的热更新" class="headerlink" title="Unity3D中的热更新"></a>Unity3D中的热更新</h2><p>Unity3D的热更新会涉及3个目录。</p>
<ul>
<li><p><strong>游戏资源目录：</strong>里面包含Unity3D工程中StreamingAssets文件夹下的文件。安装游戏之后，这些文件将会被一字不差地复制到目标机器上的特定文件夹里，不同平台的文件夹不同，如下所示</p>
<ul>
<li>Mac OS或Windows：Application.dataPath “/StreamingAssets”;</li>
<li>IOS： Application.dataPath “/Raw”;</li>
<li>Android：jar:file://“ Application.dataPath “!/assets/“; </li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>数据目录：</strong>由于“游戏资源目录”在Android和IOS上是只读的，不能把网上的下载的资源放到里面，所以需要建立一个“数据目录”，该目录可读可写。第一次开启游戏后，程序将“游戏资源目录”的内容复制到“数据目录中”（这个步骤只会执行一次，下次再打开游戏就不复制了）。游戏过程中的资源加载，都是从“数据目录”中获取、解包。不同平台下，“数据目录”的地址也不同，LuaFramework的定义如下：</p>
<ul>
<li>Android或IOS：Application.persistentDataPath “/LuaFramework”</li>
<li>Mac OS或Windows：c:/LuaFramework/</li>
<li>调试模式下：Application.dataPath “/StreamingAssets/“ </li>
</ul>
</li>
</ul>
<p>　　<strong>注：</strong>”LuaFramework”和”StreamingAssets”由配置决定，这里取默认值</p>
<ul>
<li><strong>网络资源地址：</strong>存放游戏资源的网址，游戏开启后，程序会从网络资源地址下载一些更新的文件到数据目录。</li>
</ul>
<p>这些目录包含着不同版本的资源文件，以及用于版本控制的<strong>files.txt。</strong>Files.txt里面存放着资源文件的名称和md5码。程序会<strong>先下载“网络资源地址”上的files.txt</strong>，然后与“数据目录”中文件的<strong>md5码</strong>做比较，更新有变化的文件。</p>
<h2 id="常见问题-amp-amp-注意事项"><a href="#常见问题-amp-amp-注意事项" class="headerlink" title="常见问题 &amp;&amp; 注意事项"></a>常见问题 &amp;&amp; 注意事项</h2><ol>
<li>运行 LuaStudio 时，请使用Administrator管理员权限！</li>
<li>Lua需要统一的UTF-8编码，有时候Lua脚本无故编译出错请检查编码问题！</li>
<li>若运行到真机，记得一定要设置Const.DebugMode=false</li>
<li>【该点摘录自云风博客】<strong>更新时要保护后内存中的非代码数据。</strong>这个时候，<strong>对 local 变量的使用务必小心</strong>。因为 local 变量总会被作为 upvalue 绑定在 closure 里。我们的代码经常会依赖这些 local 变量。在更新后，许多保存数据用的 local 变量会生成新的一份。这很可能丢失重要数据。而因为这个问题回避使用 local 也是不合适的。要知道 local 和 global 变量的性能可不只差上一点半点。<br>我采用的方法是，<strong>把数据记录在专用的全局表下，并用 local 去引用它。初始化这些数据的时候，首先应该检查他们是否被初始化过了。这样来保证数据不被更新过程重置</strong></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;传说中的热更新在Unity中是怎样实现的:)&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　热更新技术在游戏行业可以说是大名鼎鼎了，虽然苹果前段时间禁止了JSPatch等热更新技术，但目前来看，苹果并没有禁止游戏引擎的热更新技术。某种程度上说明了热更新在游戏中的重要性。而ulua作为一款优秀的unity3d热更新插件，完美解决了Unity游戏热更新的问题。&lt;br&gt;
    
    </summary>
    
      <category term="Unity" scheme="http://lemonxq.cn/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://lemonxq.cn/tags/Unity/"/>
    
      <category term="Lua" scheme="http://lemonxq.cn/tags/Lua/"/>
    
      <category term="热更新" scheme="http://lemonxq.cn/tags/%E7%83%AD%E6%9B%B4%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>Unity中脚本的生命周期详解</title>
    <link href="http://lemonxq.cn/2017/04/20/Unity%E4%B8%AD%E8%84%9A%E6%9C%AC%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E8%AF%A6%E8%A7%A3/"/>
    <id>http://lemonxq.cn/2017/04/20/Unity中脚本的生命周期详解/</id>
    <published>2017-04-20T07:06:22.000Z</published>
    <updated>2017-04-25T07:49:11.742Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">关于脚本的生命周期你都知道多少？</blockquote></p>
<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　在Unity项目中，经常会使用到Start、Update、Awake、OnEnable、LateUpdate、OnDisable、OnDestroy、OnGUI、FixedUpdate方法，然而，它们的生命周期你都清楚么？看上去好像无关紧要的东西往往会在不经意间给你挖了一个坑…曾经被坑过的我如是说：)<br><a id="more"></a></p>
<h2 id="Unity脚本的生命周期"><a href="#Unity脚本的生命周期" class="headerlink" title="Unity脚本的生命周期"></a>Unity脚本的生命周期</h2><p>　　先上一张图:<br><img src="http://okwl1c157.bkt.clouddn.com/Image.png" alt=""><br>　　接下来将逐个讲解…</p>
<h3 id="Awake"><a href="#Awake" class="headerlink" title="Awake"></a>Awake</h3><p>　　Awake在MonoBehavior创建后就<strong>立刻</strong>调用，此后每当脚本被加载时调用一次Awake,即使脚本没有被激活；在<strong>脚本实例的整个生命周期</strong>中，Awake函数<strong>仅执行一次</strong>；<strong>值得注意的一点是，Awake函数的执行与否与脚本实例的状态（启用或禁用）并没有关系，而是与脚本实例所绑定的游戏对象的开关状态有关。</strong>如果游戏对象（即gameObject）的初始状态为关闭状态，那么运行程序，Awake函数不会执行；如果游戏对象的初始状态为开启状态，那么Awake函数会执行；如果重新加载场景，那么场景内Awake函数的执行情况重新遵循上述两点。</p>
<h3 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h3><p>　　Start()将在MonoBehavior创建后<strong>在该帧Update()第一次执行前</strong>被调用；只会在第一次调用Update之前调用一次；Start()函数<strong>只在脚本实例被启用时</strong>才会执行；Start函数<strong>总是在Awake函数之后执行。</strong>如果游戏对象开启了，对象上绑定的脚本实例被禁用了，那么Start函数不会执行。这是Start函数的特点，只有在脚本实例被启用且是<strong>首次启用时</strong>它才会执行。<strong>如果是已经开启过的脚本实例被关闭后再次开启，那么Start函数不会再次执行。</strong></p>
<p>　　<strong>注：一般开发中都是在Awake函数中获取游戏对象或者脚本实例的信息，然后在Start函数中进行一些获取之后的初始化设置。</strong></p>
<h3 id="Update-amp-amp-LateUpdate-amp-amp-FixedUpdate"><a href="#Update-amp-amp-LateUpdate-amp-amp-FixedUpdate" class="headerlink" title="Update &amp;&amp; LateUpdate &amp;&amp; FixedUpdate"></a>Update &amp;&amp; LateUpdate &amp;&amp; FixedUpdate</h3><p>　　当MonoBehaviour启用时,其Update 和 LateUpdate在每一帧被调用；Update每帧调用一次（每秒60帧不会卡），一般用于处理画面逻辑;</p>
<p>　　LateUpate一般用于刷新其他逻辑，注意LateUpdate是晚于所有Update执行的。一般类似相机跟随的代码会放到lateupdate里面去执行。举个栗子，一个宿舍4个人，每个人的起床在update中执行，出发在某个人中的lateupdate执行，这样就可以保证每个人都起床了才会出发</p>
<p>　　而FixedUpdate会<strong>在每个固定的物理时间片</strong>被调用一次.不会受到图像刷新帧速率的影响。这是放置游戏基本物理行为代码的地方。在Update之后调用。</p>
<h3 id="OnEnable-amp-amp-OnDisable-amp-amp-OnDestory"><a href="#OnEnable-amp-amp-OnDisable-amp-amp-OnDestory" class="headerlink" title="OnEnable &amp;&amp; OnDisable &amp;&amp; OnDestory"></a>OnEnable &amp;&amp; OnDisable &amp;&amp; OnDestory</h3><p>　　OnEnable:在每次激活脚本时调用OnEnable;<br>　　OnDisable:取消激活状态后调用<br>　　OnDestroy：被销毁时调用一次</p>
<p>　<strong>　注：Awake、OnEnable、Start,都是游戏开始运行前就调用的方法。</strong></p>
<p>　　GameObject的Activity为true，脚本的enable为true时，其先后顺序为：Awake、OnEnable、Start；<br>　　GameObject的Activity为true，脚本的enable为false时,只运行Awake；<br>　　GameObject的Activity为false时，以上都不调用，OnDisable()被调用；</p>
<h3 id="OnGUI"><a href="#OnGUI" class="headerlink" title="OnGUI"></a>OnGUI</h3><p>　　这个函数会每帧调用好几次（每个事件一次），GUI显示函数只能在OnGui中调用</p>
<h3 id="Reset"><a href="#Reset" class="headerlink" title="Reset"></a>Reset</h3><p>　　Reset是在用户点击检视面板的Reset按钮或者首次添加该组件时被调用.此函数只在编辑模式下被调用.Reset最常用于在检视面板中给定一个最常用的默认值.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;关于脚本的生命周期你都知道多少？&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　在Unity项目中，经常会使用到Start、Update、Awake、OnEnable、LateUpdate、OnDisable、OnDestroy、OnGUI、FixedUpdate方法，然而，它们的生命周期你都清楚么？看上去好像无关紧要的东西往往会在不经意间给你挖了一个坑…曾经被坑过的我如是说：)&lt;br&gt;
    
    </summary>
    
      <category term="Unity" scheme="http://lemonxq.cn/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://lemonxq.cn/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Hexo静态博客搭建+个人定制</title>
    <link href="http://lemonxq.cn/2017/03/24/Hexo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA+%E4%B8%AA%E4%BA%BA%E5%AE%9A%E5%88%B6/"/>
    <id>http://lemonxq.cn/2017/03/24/Hexo静态博客搭建+个人定制/</id>
    <published>2017-03-24T15:34:45.000Z</published>
    <updated>2017-04-10T12:00:31.652Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">打造高逼格的个人博客</blockquote></p>
<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　很早以前就想写这样一篇了，因为各种原因耽搁到现在（逃）…网上关于Hexo的教程其实已经有挺多了，但是很多都是一笔带过。这篇博客除了<strong>Hexo</strong>博客的搭建过程，还有一些我加进去的<strong>个人定制</strong>模块，以及<strong>博客如何被搜索引擎（百度、谷歌）收录、如何进行SEO优化</strong>等等，以及在这过程中遇到的数不胜数的坑。虽然时隔一个月，有些搭建过程遇到的问题记不太清了orz…但是有什么问题还是可以问我的，我尽量解答=3=最后！！！【<strong>超长文预警</strong>】！！！建议可以先看目录选择感兴趣的部分orz<br><a id="more"></a></p>
<h2 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h2><p>　　相信点进来看的都是对 Hexo 已经有了一定了解的吧~简而言之，Hexo 是一个基于 Node.js 的静态博客程序，可以方便的生成静态网页托管在github和Heroku上。其作者是来自台湾的<a href="https://github.com/hexojs/hexo" target="_blank" rel="external">tommy351</a>大神。Hexo 因其界面简洁、美观且对各类人群（不只是程序猿）友好而广受欢迎，声望不亚于大名鼎鼎的WordPress。这也是我放弃 WordPress 改投 Hexo 的原因=。=放一张 Hexo NexT 主题的照片（是不是很好看hhh）<br><img src="http://okwl1c157.bkt.clouddn.com/next.png" alt=""></p>
<h2 id="基础配置篇"><a href="#基础配置篇" class="headerlink" title="基础配置篇"></a>基础配置篇</h2><p>【注：本文中使用的 Hexo 版本为<strong>3.22</strong>，部分配置与<strong>2.x</strong>可能有所出入】</p>
<h3 id="1-安装-amp-搭建"><a href="#1-安装-amp-搭建" class="headerlink" title="1.安装 &amp; 搭建"></a>1.安装 &amp; 搭建</h3><ul>
<li>安装<a href="http://git-scm.com" target="_blank" rel="external">Git</a>：安装后，注册 Github 账号，配置 SSH（具体见下一步）,打开 Git Bash,<strong>接下来的命令均在Git Bash中执行</strong></li>
<li>安装<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></li>
<li>安装 Hexo : <code>$npm install -g hexo</code></li>
<li>安装依赖包： <code>$npm install</code></li>
<li>新建博客文件夹：cd到该文件夹，执行<code>$hexo init</code></li>
<li>新建Github仓库：仓库名<strong>必须</strong>为<code>你的Github名.github.io</code>，要不然就不能使用Github Pages服务了。。。</li>
</ul>
<h3 id="2-配置-SSH"><a href="#2-配置-SSH" class="headerlink" title="2.配置 SSH"></a>2.配置 SSH</h3><p>　　关于什么是 SSH，请自行百度（我懒..）这里直接讲一下配置步骤。  </p>
<ul>
<li>本地生成公钥私钥<br>　<code>$ssh-keygen -t rsa -C &quot;你的邮件地址&quot;</code></li>
<li>添加公钥到 Github<ul>
<li>根据上一步的提示，找到公钥文件（默认为id_rsa.pub），用记事本打开，全选并复制。</li>
<li>登录 Github，右上角 头像 -&gt; Settings —&gt; SSH keys —&gt; Add SSH key。把公钥粘贴到key中，填好title并点击 Add key。</li>
<li>git bash中输入命令<code>$ssh -T git@github.com</code>，选yes，等待片刻可看到成功提示。</li>
</ul>
</li>
</ul>
<h3 id="3-NexT主题下载"><a href="#3-NexT主题下载" class="headerlink" title="3. NexT主题下载"></a>3. NexT主题下载</h3><p>　　 NexT 主题是由 <a href="https://github.com/iissnan" target="_blank" rel="external">iissnan</a> 大神所制作的一款简洁美观不失逼格的主题。下载方法有以下两种：  </p>
<ul>
<li>进入<code>博客根目录/themes/</code>, 执行<code>$git clone https://github.com/iissnan/hexo-theme-next.git</code></li>
<li>直接进入上面的链接，在项目主页download zip文件，然后解压到<code>博客根目录/themes/</code> 文件夹</li>
</ul>
<h3 id="4-发布"><a href="#4-发布" class="headerlink" title="4. 发布"></a>4. 发布</h3><p>　　使用以下两条命令进行发布，发布成功后可在浏览器中使用<code>你的github名.github.io</code>进入你的博客~<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$hexo clean</div><div class="line">$hexo d -g</div></pre></td></tr></table></figure></p>
<h2 id="Hexo日常使用篇"><a href="#Hexo日常使用篇" class="headerlink" title="Hexo日常使用篇"></a>Hexo日常使用篇</h2><h3 id="1-生成静态页面："><a href="#1-生成静态页面：" class="headerlink" title="1.生成静态页面："></a>1.生成静态页面：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$hexo generate</div></pre></td></tr></table></figure>
<h3 id="2-本地预览："><a href="#2-本地预览：" class="headerlink" title="2.本地预览："></a>2.本地预览：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$hexo server//或 hexo s</div><div class="line">//然后打开浏览器输入localhost:4000可以预览博客效果，用于调试</div></pre></td></tr></table></figure>
<h3 id="3-新建文章"><a href="#3-新建文章" class="headerlink" title="3. 新建文章"></a>3. 新建文章</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$hexo new post &quot;title&quot;</div><div class="line">//新文章位置：/source/_posts</div></pre></td></tr></table></figure>
<h3 id="4-新建页面"><a href="#4-新建页面" class="headerlink" title="4. 新建页面"></a>4. 新建页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$hexo new page &quot;title&quot;</div></pre></td></tr></table></figure>
<h3 id="5-部署并生成"><a href="#5-部署并生成" class="headerlink" title="5. 部署并生成"></a>5. 部署并生成</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$hexo d -g</div></pre></td></tr></table></figure>
<h3 id="6-清除生成的文件和缓存"><a href="#6-清除生成的文件和缓存" class="headerlink" title="6. 清除生成的文件和缓存"></a>6. 清除生成的文件和缓存</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$hexo clean</div></pre></td></tr></table></figure>
<h2 id="config文件配置篇"><a href="#config文件配置篇" class="headerlink" title="_config文件配置篇"></a>_config文件配置篇</h2><h3 id="1-整站配置"><a href="#1-整站配置" class="headerlink" title="1.整站配置"></a>1.整站配置</h3><p>直接贴一下我的配置文件吧【路径：<strong>博客根目录/_config.yml</strong>】  </p>
<p>【<strong>友情提示：</strong>不要用系统自带记事本打开，容易出现编码不一致问题，最好用 <strong>Notepad++</strong> 或 <strong>Sublime Text</strong> 之类的】   </p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Hexo Configuration</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></div><div class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></div><div class="line"></div><div class="line"><span class="comment"># Site</span></div><div class="line"><span class="attr">title:</span> Lemon-XQ <span class="comment"># 博客名</span></div><div class="line"><span class="attr">subtitle:</span> Stay Hungry, Stay Foolish <span class="comment"># 副标题</span></div><div class="line"><span class="attr">description:</span> 银河街角，时光路口 <span class="comment"># 站点描述</span></div><div class="line"><span class="attr">author:</span> Lemon-XQ <span class="comment"># 作者名</span></div><div class="line"><span class="attr">language:</span> zh-Hans <span class="comment"># 语言设置</span></div><div class="line"><span class="attr">timezone:</span> Asia/Shanghai</div><div class="line"></div><div class="line"><span class="comment"># URL</span></div><div class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></div><div class="line"><span class="attr">url:</span> http://lemonxq.cn <span class="comment"># 博客所要绑定的域名，没有则不填</span></div><div class="line"><span class="attr">root:</span> /</div><div class="line"><span class="attr">permalink:</span> :year/:month/:day/:title/</div><div class="line"><span class="attr">permalink_defaults:</span></div><div class="line"></div><div class="line"><span class="comment"># Directory</span></div><div class="line"><span class="attr">source_dir:</span> source</div><div class="line"><span class="attr">public_dir:</span> public</div><div class="line"><span class="attr">tag_dir:</span> tags</div><div class="line"><span class="attr">archive_dir:</span> archives</div><div class="line"><span class="attr">category_dir:</span> categories</div><div class="line"><span class="attr">code_dir:</span> downloads/code</div><div class="line"><span class="attr">i18n_dir:</span> :lang</div><div class="line"><span class="attr">skip_render:</span></div><div class="line"></div><div class="line"><span class="comment"># Writing</span></div><div class="line"><span class="attr">new_post_name:</span> :title.md <span class="comment"># File name of new posts</span></div><div class="line"><span class="attr">default_layout:</span> post</div><div class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></div><div class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></div><div class="line"><span class="attr">filename_case:</span> <span class="number">0</span></div><div class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></div><div class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></div><div class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></div><div class="line"><span class="attr">future:</span> <span class="literal">true</span></div><div class="line"><span class="attr">highlight:</span> <span class="comment"># Hexo自带代码高亮插件</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  auto_detect:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  tab_replace:</span></div><div class="line"></div><div class="line"><span class="comment"># Category &amp; Tag</span></div><div class="line"><span class="attr">default_category:</span> uncategorized</div><div class="line"><span class="attr">category_map:</span></div><div class="line"><span class="attr">tag_map:</span></div><div class="line"></div><div class="line"><span class="comment"># Date / Time format</span></div><div class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></div><div class="line"><span class="comment">## You can customize the date format as defined in</span></div><div class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></div><div class="line"><span class="attr">date_format:</span> YYYY-MM-DD</div><div class="line"><span class="attr">time_format:</span> HH:mm:ss</div><div class="line"></div><div class="line"><span class="comment"># Pagination</span></div><div class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></div><div class="line"><span class="attr">per_page:</span> <span class="number">10</span> <span class="comment"># 每页显示文章数</span></div><div class="line"><span class="attr">pagination_dir:</span> page</div><div class="line"></div><div class="line"><span class="comment"># Extensions # 以下为第三方插件设置</span></div><div class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></div><div class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></div><div class="line"><span class="attr">theme:</span> next <span class="comment"># 使用的主题，主题配置后面讲</span></div><div class="line"></div><div class="line"><span class="attr">search:</span> <span class="comment"># 本地搜索插件</span></div><div class="line"><span class="attr">  path:</span> search.xml</div><div class="line"><span class="attr">  field:</span> post</div><div class="line"><span class="attr">  format:</span> html</div><div class="line"><span class="attr">  limit:</span> <span class="number">10000</span></div><div class="line"></div><div class="line"><span class="attr">feed:</span> <span class="comment"># RSS订阅插件</span></div><div class="line"><span class="attr">  type:</span> atom</div><div class="line"><span class="attr">  path:</span> atom.xml</div><div class="line"><span class="attr">  limit:</span> <span class="number">0</span></div><div class="line"></div><div class="line"><span class="attr">plugins:</span></div><div class="line"><span class="attr">baidusitemap:</span> <span class="comment"># 百度站点地图</span></div><div class="line"><span class="attr">  path:</span> baidusitemap.xml</div><div class="line"></div><div class="line"><span class="comment"># Deployment # 非常重要的部署设置</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></div><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span> git</div><div class="line"><span class="attr">  repository:</span> <span class="comment"># 可选择同时部署到 GitHub 和 coding 或者只部署到 Github</span></div><div class="line"><span class="attr">    github:</span> git@github.com:你的GitHub名/你的GitHub名.github.io.git</div><div class="line"><span class="attr">    coding:</span> git@git.coding.net:你的Coding名/你的Coding名.git</div><div class="line"><span class="attr">  branch:</span> master </div><div class="line"></div></pre></td></tr></table></figure>
<h3 id="2-Next主题配置"><a href="#2-Next主题配置" class="headerlink" title="2.Next主题配置"></a>2.Next主题配置</h3><p>一样贴一下我的主题config文件吧，注意和上面的全局config文件区分。<br>【路径：博客根目录/themes/next/_config.yml】</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="comment"># Site Information Settings</span></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment"># Put your favicon.ico into `hexo-site/source/` directory.</span></div><div class="line"><span class="attr">favicon:</span> /favicon.ico <span class="comment"># 网站logo</span></div><div class="line"></div><div class="line"><span class="comment"># Set default keywords (Use a comma to separate)</span></div><div class="line"><span class="attr">keywords:</span> <span class="string">"Lemon,xq,unity,Hexo"</span> <span class="comment"># 网站关键词，有利于SEO优化</span></div><div class="line"></div><div class="line"><span class="comment"># Set rss to false to disable feed link.</span></div><div class="line"><span class="comment"># Leave rss as empty to use site's feed link.</span></div><div class="line"><span class="comment"># Set rss to specific value if you have burned your feed already.</span></div><div class="line"><span class="attr">rss:</span> /atom.xml</div><div class="line"></div><div class="line"><span class="comment"># Specify the date when the site was setup</span></div><div class="line"><span class="attr">since:</span> <span class="number">2017</span> <span class="comment"># 建站年份</span></div><div class="line"></div><div class="line"><span class="comment"># icon between year and author @Footer</span></div><div class="line"><span class="attr">authoricon:</span> heart</div><div class="line"></div><div class="line"><span class="comment"># Footer `powered-by` and `theme-info` copyright</span></div><div class="line"><span class="attr">copyright:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment"># Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.</span></div><div class="line"><span class="comment"># See: https://support.google.com/webmasters/answer/139066</span></div><div class="line"><span class="comment"># Tips: Before you open this tag, remeber set up your URL in hexo _config.yml ( ex. url: http://yourdomain.com )</span></div><div class="line"><span class="attr">canonical:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment"># Change headers hierarchy on site-subtitle (will be main site description) and on all post/pages titles for better SEO-optimization.</span></div><div class="line"><span class="attr">seo:</span> <span class="literal">false</span></div><div class="line"></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="comment"># Menu Settings</span></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)</span></div><div class="line"><span class="attr">menu:</span> <span class="comment"># 菜单栏设置</span></div><div class="line"><span class="attr">  home:</span> /</div><div class="line"><span class="attr">  categories:</span> /categories</div><div class="line"><span class="attr">  about:</span> /about</div><div class="line"><span class="attr">  archives:</span> /archives</div><div class="line"><span class="attr">  tags:</span> /tags</div><div class="line">  <span class="comment">#sitemap: /sitemap.xml</span></div><div class="line">  <span class="comment">#commonweal: /404.html</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Enable/Disable menu icons.</span></div><div class="line"><span class="comment"># Icon Mapping:</span></div><div class="line"><span class="comment">#   Map a menu item to a specific FontAwesome icon name.</span></div><div class="line"><span class="comment">#   Key is the name of menu item and value is the name of FontAwsome icon. Key is case-senstive.</span></div><div class="line"><span class="comment">#   When an question mask icon presenting up means that the item has no mapping icon.</span></div><div class="line"><span class="attr">menu_icons:</span> <span class="comment"># 菜单项图标</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line">  <span class="comment">#KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</span></div><div class="line"><span class="attr">  home:</span> home</div><div class="line"><span class="attr">  about:</span> user</div><div class="line"><span class="attr">  categories:</span> th</div><div class="line"><span class="attr">  schedule:</span> calendar</div><div class="line"><span class="attr">  tags:</span> tags</div><div class="line"><span class="attr">  archives:</span> archive</div><div class="line"><span class="attr">  sitemap:</span> sitemap</div><div class="line"><span class="attr">  commonweal:</span> heartbeat</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="comment"># Scheme Settings</span></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment"># Schemes # NexT 主题提供三种布局</span></div><div class="line"><span class="comment">#scheme: Muse</span></div><div class="line"><span class="comment">#scheme: Mist</span></div><div class="line"><span class="attr">scheme:</span> Pisces</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="comment"># Font Settings</span></div><div class="line"><span class="comment"># - Find fonts on Google Fonts (https://www.google.com/fonts)</span></div><div class="line"><span class="comment"># - All fonts set here will have the following styles:</span></div><div class="line"><span class="comment">#     light, light italic, normal, normal intalic, bold, bold italic</span></div><div class="line"><span class="comment"># - Be aware that setting too much fonts will cause site running slowly</span></div><div class="line"><span class="comment"># - Introduce in 5.0.1</span></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="attr">font:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"></div><div class="line">  <span class="comment"># Uri of fonts host. E.g. //fonts.googleapis.com (Default)</span></div><div class="line"><span class="attr">  host:</span></div><div class="line"></div><div class="line">  <span class="comment"># Global font settings used on &lt;body&gt; element.</span></div><div class="line"><span class="attr">  global:</span></div><div class="line">    <span class="comment"># external: true will load this font family from host.</span></div><div class="line"><span class="attr">    external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    family:</span> Lato</div><div class="line"></div><div class="line">  <span class="comment"># Font settings for Headlines (h1, h2, h3, h4, h5, h6)</span></div><div class="line">  <span class="comment"># Fallback to `global` font settings.</span></div><div class="line"><span class="attr">  headings:</span></div><div class="line"><span class="attr">    external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    family:</span></div><div class="line"></div><div class="line">  <span class="comment"># Font settings for posts</span></div><div class="line">  <span class="comment"># Fallback to `global` font settings.</span></div><div class="line"><span class="attr">  posts:</span></div><div class="line"><span class="attr">    external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    family:</span></div><div class="line"></div><div class="line">  <span class="comment"># Font settings for Logo</span></div><div class="line">  <span class="comment"># Fallback to `global` font settings.</span></div><div class="line">  <span class="comment"># The `size` option use `px` as unit</span></div><div class="line"><span class="attr">  logo:</span></div><div class="line"><span class="attr">    external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    family:</span></div><div class="line"><span class="attr">    size:</span></div><div class="line"></div><div class="line">  <span class="comment"># Font settings for &lt;code&gt; and code blocks.</span></div><div class="line"><span class="attr">  codes:</span></div><div class="line"><span class="attr">    external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    family:</span></div><div class="line"><span class="attr">    size:</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="comment"># Sidebar Settings</span></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment">#friend links</span></div><div class="line"><span class="attr">links_title:</span> 友情链接</div><div class="line"></div><div class="line"><span class="attr">links:</span></div><div class="line">  <span class="comment"># 添加你的友情链接（eg. 慕课网: imooc.com）</span></div><div class="line"></div><div class="line"><span class="comment"># Social Links</span></div><div class="line"><span class="comment"># Key is the link label showing to end users.</span></div><div class="line"><span class="comment"># Value is the target link (E.g. GitHub: https://github.com/iissnan)</span></div><div class="line"><span class="attr">social:</span> <span class="comment"># 添加你的社交账号</span></div><div class="line"><span class="attr">  GitHub:</span> https://github.com/Lemon-XQ</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Social Links Icons</span></div><div class="line"><span class="comment"># Icon Mapping:</span></div><div class="line"><span class="comment">#   Map a menu item to a specific FontAwesome icon name.</span></div><div class="line"><span class="comment">#   Key is the name of the item and value is the name of FontAwsome icon. Key is case-senstive.</span></div><div class="line"><span class="comment">#   When an globe mask icon presenting up means that the item has no mapping icon.</span></div><div class="line"><span class="attr">social_icons:</span> </div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line">  <span class="comment"># Icon Mappings.</span></div><div class="line">  <span class="comment"># KeyMapsToSocalItemKey: NameOfTheIconFromFontAwesome</span></div><div class="line"><span class="attr">  GitHub:</span> github</div><div class="line"><span class="attr">  Twitter:</span> twitter</div><div class="line"><span class="attr">  Weibo:</span> weibo</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Sidebar Avatar</span></div><div class="line"><span class="comment"># in theme directory(source/images): /images/avatar.jpg</span></div><div class="line"><span class="comment"># in site  directory(source/uploads): /uploads/avatar.jpg</span></div><div class="line"><span class="attr">avatar:</span> /images/avatar.jpg <span class="comment"># 自定义头像</span></div><div class="line"></div><div class="line"><span class="comment"># 是否为侧边栏文章的目录自动添加索引</span></div><div class="line"><span class="comment"># Table Of Contents in the Sidebar</span></div><div class="line"><span class="attr">toc:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"></div><div class="line">  <span class="comment"># Automatically add list number to toc.</span></div><div class="line"><span class="attr">  number:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Creative Commons 4.0 International License.</span></div><div class="line"><span class="comment"># http://creativecommons.org/</span></div><div class="line"><span class="comment"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></div><div class="line"><span class="comment">#creative_commons: by-nc-sa</span></div><div class="line"><span class="comment">#creative_commons:</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="attr">sidebar:</span> <span class="comment"># 这个改了好像没什么用。。。</span></div><div class="line">  <span class="comment"># Sidebar Position, available value: left | right</span></div><div class="line"><span class="attr">  position:</span> left</div><div class="line">  <span class="comment">#position: right</span></div><div class="line"></div><div class="line">  <span class="comment"># Sidebar Display, available value:</span></div><div class="line">  <span class="comment">#  - post    expand on posts automatically. Default.</span></div><div class="line">  <span class="comment">#  - always  expand for all pages automatically</span></div><div class="line">  <span class="comment">#  - hide    expand only when click on the sidebar toggle icon.</span></div><div class="line">  <span class="comment">#  - remove  Totally remove sidebar including sidebar toggler.</span></div><div class="line"><span class="attr">  display:</span> post</div><div class="line">  <span class="comment">#display: always</span></div><div class="line">  <span class="comment">#display: hide</span></div><div class="line">  <span class="comment">#display: remove</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Blogrolls </span></div><div class="line"><span class="comment">#links_title: Links</span></div><div class="line"><span class="comment">#links_layout: block</span></div><div class="line"><span class="comment">#links_layout: inline</span></div><div class="line"><span class="comment">#links:</span></div><div class="line">  <span class="comment">#Title: http://example.com/</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="comment"># Post Settings</span></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span></div><div class="line"><span class="comment"># 开启后使用 &lt;!-more--&gt; 可以实现点击查看全文效果</span></div><div class="line"><span class="attr">scroll_to_more:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment"># Automatically excerpt description in homepage as preamble text.</span></div><div class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment"># Automatically Excerpt. Not recommand.</span></div><div class="line"><span class="comment"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></div><div class="line"><span class="attr">auto_excerpt:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  length:</span> <span class="number">150</span></div><div class="line"></div><div class="line"><span class="comment"># Post meta display settings</span></div><div class="line"><span class="attr">post_meta:</span></div><div class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  created_at:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  updated_at:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  categories:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment">#开启微信赞赏</span></div><div class="line"><span class="comment"># Wechat Subscriber</span></div><div class="line"><span class="attr">wechat_subscriber:</span></div><div class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  qcode:</span> http://okwl1c157.bkt.clouddn.com/wechat-qcode.jpg</div><div class="line"><span class="attr">  description:</span> 坚持原创技术分享，您的支持将鼓励我继续创作！</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="comment"># Misc Theme Settings # Misc布局设置</span></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment"># Custom Logo.</span></div><div class="line"><span class="comment"># !!Only available for Default Scheme currently.</span></div><div class="line"><span class="comment"># Options:</span></div><div class="line"><span class="comment">#   enabled: [true/false] - Replace with specific image</span></div><div class="line"><span class="comment">#   image: url-of-image   - Images's url</span></div><div class="line"><span class="attr">custom_logo:</span></div><div class="line"><span class="attr">  enabled:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  image:</span> </div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Code Highlight theme</span></div><div class="line"><span class="comment"># Available value:</span></div><div class="line"><span class="comment">#    normal | night | night eighties | night blue | night bright</span></div><div class="line"><span class="comment"># https://github.com/chriskempson/tomorrow-theme</span></div><div class="line"><span class="comment"># 设置代码高亮主题</span></div><div class="line"><span class="attr">highlight_theme:</span> night bright</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"><span class="comment"># Third Party Services Settings</span></div><div class="line"><span class="comment"># ---------------------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment"># MathJax Support</span></div><div class="line"><span class="attr">mathjax:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  per_page:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  cdn:</span> //cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML</div><div class="line"></div><div class="line"><span class="comment"># 自从Swiftype要收费后。。。你懂的</span></div><div class="line"><span class="comment"># Swiftype Search API Key</span></div><div class="line"><span class="comment">#swiftype_key:</span></div><div class="line"></div><div class="line"><span class="comment"># Baidu Analytics ID</span></div><div class="line"><span class="comment">#baidu_analytics:</span></div><div class="line"></div><div class="line"><span class="comment"># 多说 你的昵称</span></div><div class="line"><span class="comment"># Duoshuo ShortName</span></div><div class="line"><span class="attr">duoshuo_shortname:</span> lemonxq</div><div class="line"></div><div class="line"><span class="comment"># Disqus</span></div><div class="line"><span class="comment">#disqus_shortname:</span></div><div class="line"></div><div class="line"><span class="comment"># Hypercomments</span></div><div class="line"><span class="comment">#hypercomments_id:</span></div><div class="line"></div><div class="line"><span class="comment"># Gentie productKey</span></div><div class="line"><span class="comment">#gentie_productKey:</span></div><div class="line"></div><div class="line"><span class="comment"># Support for youyan comments system.</span></div><div class="line"><span class="comment"># You can get your uid from http://www.uyan.cc</span></div><div class="line"><span class="comment">#youyan_uid: your uid</span></div><div class="line"></div><div class="line"><span class="comment"># Baidu Share</span></div><div class="line"><span class="comment"># Available value:</span></div><div class="line"><span class="comment">#    button | slide</span></div><div class="line"><span class="comment"># Warning: Baidu Share does not support https.</span></div><div class="line"><span class="comment">#baidushare:</span></div><div class="line"><span class="comment">##  type: button</span></div><div class="line"></div><div class="line"><span class="comment"># Share</span></div><div class="line"><span class="comment">#jiathis:</span></div><div class="line"><span class="comment"># Warning: JiaThis does not support https.</span></div><div class="line"><span class="comment">#add_this_id:</span></div><div class="line"></div><div class="line"><span class="comment"># Share</span></div><div class="line"><span class="attr">duoshuo_share:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment"># Google Webmaster tools verification setting</span></div><div class="line"><span class="comment"># See: https://www.google.com/webmasters/</span></div><div class="line"><span class="comment">#google_site_verification:</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Google Analytics</span></div><div class="line"><span class="comment">#google_analytics:</span></div><div class="line"></div><div class="line"><span class="comment"># CNZZ count</span></div><div class="line"><span class="attr">cnzz_siteid:</span> <span class="comment"># CNZZ站长统计功能，开启服务后将siteid添加在此处</span></div><div class="line"></div><div class="line"><span class="comment"># Application Insights</span></div><div class="line"><span class="comment"># See https://azure.microsoft.com/en-us/services/application-insights/</span></div><div class="line"><span class="comment"># application_insights:</span></div><div class="line"></div><div class="line"><span class="comment"># Make duoshuo show UA</span></div><div class="line"><span class="comment"># user_id must NOT be null when admin_enable is true!</span></div><div class="line"><span class="comment"># you can visit http://dev.duoshuo.com get duoshuo user id.</span></div><div class="line"><span class="comment"># 多说评论功能</span></div><div class="line"><span class="attr">duoshuo_info:</span></div><div class="line"><span class="attr">  ua_enable:</span> <span class="literal">true</span> </div><div class="line"><span class="attr">  admin_enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  user_id:</span> <span class="comment"># 管理员ID</span></div><div class="line"><span class="attr">  admin_nickname:</span> 博主</div><div class="line"></div><div class="line"><span class="attr">duoshuo_hotartical:</span> <span class="literal">true</span> <span class="comment"># 多说 热评文章</span></div><div class="line"></div><div class="line"><span class="comment"># Facebook SDK Support.</span></div><div class="line"><span class="comment"># https://github.com/iissnan/hexo-theme-next/pull/410</span></div><div class="line"><span class="attr">facebook_sdk:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  app_id:</span>       <span class="comment">#&lt;app_id&gt;</span></div><div class="line"><span class="attr">  fb_admin:</span>     <span class="comment">#&lt;user_id&gt;</span></div><div class="line"><span class="attr">  like_button:</span>  <span class="comment">#true</span></div><div class="line"><span class="attr">  webmaster:</span>    <span class="comment">#true</span></div><div class="line"></div><div class="line"><span class="comment"># Facebook comments plugin</span></div><div class="line"><span class="comment"># This plugin depends on Facebook SDK.</span></div><div class="line"><span class="comment"># If facebook_sdk.enable is false, Facebook comments plugin is unavailable.</span></div><div class="line"><span class="attr">facebook_comments_plugin:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  num_of_posts:</span> <span class="number">10</span>  <span class="comment"># min posts num is 1</span></div><div class="line"><span class="attr">  width:</span> <span class="number">100</span>%       <span class="comment"># default width is 550px</span></div><div class="line"><span class="attr">  scheme:</span> light     <span class="comment"># default scheme is light (light or dark)</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Show number of visitors to each article.</span></div><div class="line"><span class="comment"># You can visit https://leancloud.cn get AppID and AppKey.</span></div><div class="line"><span class="comment"># 启动页面浏览量功能</span></div><div class="line"><span class="attr">leancloud_visitors:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  app_id:</span> <span class="comment"># leancloud 控制台后台获取</span></div><div class="line"><span class="attr">  app_key:</span> <span class="comment"># leancloud 控制台后台获取</span></div><div class="line"></div><div class="line"><span class="comment"># Show PV/UV of the website/page with busuanzi.</span></div><div class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></div><div class="line"><span class="comment"># 不蒜子统计功能</span></div><div class="line"><span class="attr">busuanzi_count:</span></div><div class="line">  <span class="comment"># count values only if the other configs are false</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line">  <span class="comment"># custom uv span for the whole site</span></div><div class="line"><span class="attr">  site_uv:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  site_uv_header:</span> &lt;i class=<span class="string">"fa fa-user"</span>&gt;&lt;/i<span class="string">&gt;</span></div><div class="line"><span class="attr">  site_uv_footer:</span></div><div class="line">  <span class="comment"># custom pv span for the whole site</span></div><div class="line"><span class="attr">  site_pv:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  site_pv_header:</span> &lt;i class=<span class="string">"fa fa-eye"</span>&gt;&lt;/i<span class="string">&gt;</span></div><div class="line"><span class="attr">  site_pv_footer:</span></div><div class="line">  <span class="comment"># custom pv span for one page only</span></div><div class="line"><span class="attr">  page_pv:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  page_pv_header:</span> &lt;i class=<span class="string">"fa fa-file-o"</span>&gt;&lt;/i<span class="string">&gt;</span></div><div class="line"><span class="attr">  page_pv_footer:</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Tencent analytics ID</span></div><div class="line"><span class="comment"># tencent_analytics:</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span></div><div class="line"><span class="comment"># 百度推送</span></div><div class="line"><span class="attr">baidu_push:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment"># Google Calendar</span></div><div class="line"><span class="comment"># Share your recent schedule to others via calendar page</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># API Documentation:</span></div><div class="line"><span class="comment"># https://developers.google.com/google-apps/calendar/v3/reference/events/list</span></div><div class="line"><span class="attr">calendar:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  calendar_id:</span> &lt;required<span class="string">&gt;</span></div><div class="line"><span class="attr">  api_key:</span> &lt;required<span class="string">&gt;</span></div><div class="line"><span class="attr">  orderBy:</span> startTime</div><div class="line"><span class="attr">  offsetMax:</span> <span class="number">24</span></div><div class="line"><span class="attr">  offsetMin:</span> <span class="number">4</span></div><div class="line"><span class="attr">  timeZone:</span></div><div class="line"><span class="attr">  showDeleted:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  singleEvents:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  maxResults:</span> <span class="number">250</span></div><div class="line"></div><div class="line"><span class="comment"># Algolia Search</span></div><div class="line"><span class="attr">algolia_search:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  hits:</span></div><div class="line"><span class="attr">    per_page:</span> <span class="number">10</span></div><div class="line"><span class="attr">  labels:</span></div><div class="line"><span class="attr">    input_placeholder:</span> Search for Posts</div><div class="line"><span class="attr">    hits_empty:</span> <span class="string">"We didn't find any results for the search: $&#123;query&#125;"</span></div><div class="line"><span class="attr">    hits_stats:</span> <span class="string">"$&#123;hits&#125; results found in $&#123;time&#125; ms"</span></div><div class="line"></div></pre></td></tr></table></figure>
<h2 id="个人定制模块"><a href="#个人定制模块" class="headerlink" title="个人定制模块"></a>个人定制模块</h2><h3 id="更改代码块颜色及字体大小"><a href="#更改代码块颜色及字体大小" class="headerlink" title="更改代码块颜色及字体大小"></a>更改代码块颜色及字体大小</h3><ol>
<li>打开<code>\themes\next\source\css\ _variables\base.styl</code>文件</li>
<li>修改<code>$code-background</code>和<code>$code-foreground</code>的值：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// Code &amp; Code Blocks</div><div class="line">// 用``围出的代码块</div><div class="line">// --------------------------------------------------</div><div class="line">$code-font-family               = $font-family-monospace</div><div class="line">$code-font-size                 = <span class="number">15</span>px <span class="comment"># 代码字体大小</span></div><div class="line">$code-background                = <span class="comment">#自定义RGB值</span></div><div class="line">$code-foreground                = <span class="comment">#自定义RGB值</span></div><div class="line">$code-border-radius             = <span class="number">4</span>px</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="实现底栏半透明"><a href="#实现底栏半透明" class="headerlink" title="实现底栏半透明"></a>实现底栏半透明</h3><ol>
<li>打开<br><code>博客根目录/themes/next/source/css/_common/components/footer/footer,styl</code>文件</li>
<li>在最开始的.footer中修改color值为#999<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.footer &#123;</div><div class="line"><span class="attr">  font-size:</span> <span class="number">14</span>px;</div><div class="line"><span class="attr">  color:</span> <span class="comment">#999;</span></div><div class="line">  img &#123; border: none; &#125;</div><div class="line">  +mobile()&#123;</div><div class="line">	font-size: <span class="number">13</span>px;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="添加背景图片"><a href="#添加背景图片" class="headerlink" title="添加背景图片"></a>添加背景图片</h3><ol>
<li>将背景图片命名为<strong>background.jpg</strong>并放入<code>博客根目录/source/images</code>文件夹中</li>
<li>打开<code>博客根目录/themes/next/source/css/_custom/custom.styl</code>文件</li>
<li>加入如下代码：</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">// Custom styles.</div><div class="line">body &#123; </div><div class="line">	background-image: url(/images/background.jpg);</div><div class="line">	background-attachment: fixed;</div><div class="line">	background-repeat: <span class="literal">no</span>-repeat;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h2><h3 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h3><p>　　一个高逼格的博客怎么能够少了域名呢=。=域名提供商有很多，像godaddy、万网等。如果是学生党的话推荐使用<strong>腾讯云</strong>“<a href="https://www.qcloud.com/act/campus" target="_blank" rel="external">1元云主机+域名</a>”计划。</p>
<h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><p>这里以在腾讯云购买的域名为例。</p>
<ol>
<li>进入腾讯云后台域名管理，点击解析域名</li>
<li>添加DNS记录：<br><img src="http://okwl1c157.bkt.clouddn.com/dns2.png" alt=""><br><img src="http://okwl1c157.bkt.clouddn.com/dns1.png" alt=""><br>【注：腾讯云中DNS记录生效需要十分钟，请耐心等待】</li>
<li>在博客根目录里的source目录中新建CNAME文本文件（不带任何后缀！！！），然后用Notepad++编辑CNAME文件，写入你的域名，保存退出</li>
<li>重新部署一下博客（hexo clean、hexo d -g）</li>
<li>试试能不能通过域名访问到你的博客</li>
</ol>
<h2 id="百度-amp-谷歌收录"><a href="#百度-amp-谷歌收录" class="headerlink" title="百度 &amp; 谷歌收录"></a>百度 &amp; 谷歌收录</h2><p>检测站点是否已被百度 or 谷歌收录的方法： 在百度 or 谷歌搜索框中输入<code>site:你的站点</code>然后回车，如果有结果显示，说明已被收录。</p>
<h3 id="百度收录"><a href="#百度收录" class="headerlink" title="百度收录"></a>百度收录</h3><p>　　让百度收录我的博客真的是经历了很长的一段过程。。。关于提交sitemap、设置推送链接可以看一下<a href="http://www.jianshu.com/p/8c0707ce5da4" target="_blank" rel="external">这篇文章</a>。事实上按照该博客的做法后，我等了一个星期都没有收录成功（明明谷歌的都收录了orz）。后来，我发现了原因。那就是github禁止了百度爬虫，而我的站点又是托管在github上的，所以百度爬取不到我的网页，自然收录不了，以下是解决方案。</p>
<ol>
<li>将博客同时部署在github和<strong>coding</strong>上，coding的服务器在国内，访问速度快，而且最重要的是不禁百度爬虫</li>
<li>打开根目录下_config.yml文件，修改最下面的deploy部分如下</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository:</div><div class="line">    github: git@github.com:你的GitHub名/你的GitHub名.github.io.git</div><div class="line">    coding: git@git.coding.net:你的Coding名/你的Coding名.git</div><div class="line">  branch: master </div></pre></td></tr></table></figure>
<ol>
<li>coding上创建一个新项目，建议<strong>命名为你的Github名</strong></li>
<li>本地打开 id_rsa.pub 文件，复制其中全部内容，填写到SSH_RSA公钥key下的一栏，公钥名称可以随意起名字。完成后点击“添加”，然后输入密码或动态码即可添加完成。添加后，在git bash命令输入：<code>ssh -T git@git.coding.net</code>检测公钥是否添加成功</li>
<li>在coding项目主页中点击<strong>pages服务</strong>，进行如下配置<br><img src="http://okwl1c157.bkt.clouddn.com/pages.png" alt=""></li>
<li>在DNS Pod中添加两条CNAME记录，如下<br><img src="http://okwl1c157.bkt.clouddn.com/dns3.png" alt=""><br><img src="http://okwl1c157.bkt.clouddn.com/dns4.png" alt=""></li>
<li>重新部署博客，等待一两天后应该就可以在百度里搜索到你的博客啦（虽然目前为止，百度好像也就收录了我的站点首页= =）</li>
<li>小tips：百度<strong>主动推送</strong>比自动推送等要快的多，因此每写完一篇博客后，建议自己主动推送给百度，方法百度站长平台里有写</li>
<li>小tips之二：在百度站长平台<strong>索引量</strong>工具定制索引规则为：<code>你的站点/*</code>　可以加快百度爬虫爬取你的博客网站下的子网页并建立索引的速度。<h3 id="谷歌收录"><a href="#谷歌收录" class="headerlink" title="谷歌收录"></a>谷歌收录</h3>让谷歌收录就容易多了，只要提交站点地图然后验证域名所有权就行了，具体的上面那篇文章也很详细地介绍了，这里不再赘述。</li>
</ol>
<h2 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h2><h3 id="更改首页标题格式"><a href="#更改首页标题格式" class="headerlink" title="更改首页标题格式"></a>更改首页标题格式</h3><p>打开\themes\next\layout\index.swig文件，找到这行代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; &#123;% endblock %&#125;</div></pre></td></tr></table></figure></p>
<p>把它改成：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% block title %&#125;</div><div class="line">  &#123;&#123; theme.keywords &#125;&#125; - &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125;</div><div class="line">&#123;% endblock %&#125;</div></pre></td></tr></table></figure></p>
<h3 id="外链生成"><a href="#外链生成" class="headerlink" title="外链生成"></a>外链生成</h3><p>　　这里推荐使用外链工具为你的站点批量生成外链。百度一下“超级外链SEO工具”，输入站点名，然后就让它自动为你生成外链吧~~新站的话建议每天刷两次。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><p><a href="https://lovenight.github.io/2015/11/10/Hexo-3-1-1-%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/" target="_blank" rel="external">Hexo3.1.1静态博客搭建指南</a></p>
</li>
<li><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NexT使用文档</a></p>
</li>
<li><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo官方文档（中文版）</a></p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;打造高逼格的个人博客&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　很早以前就想写这样一篇了，因为各种原因耽搁到现在（逃）…网上关于Hexo的教程其实已经有挺多了，但是很多都是一笔带过。这篇博客除了&lt;strong&gt;Hexo&lt;/strong&gt;博客的搭建过程，还有一些我加进去的&lt;strong&gt;个人定制&lt;/strong&gt;模块，以及&lt;strong&gt;博客如何被搜索引擎（百度、谷歌）收录、如何进行SEO优化&lt;/strong&gt;等等，以及在这过程中遇到的数不胜数的坑。虽然时隔一个月，有些搭建过程遇到的问题记不太清了orz…但是有什么问题还是可以问我的，我尽量解答=3=最后！！！【&lt;strong&gt;超长文预警&lt;/strong&gt;】！！！建议可以先看目录选择感兴趣的部分orz&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://lemonxq.cn/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://lemonxq.cn/tags/Hexo/"/>
    
      <category term="博客" scheme="http://lemonxq.cn/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="SEO" scheme="http://lemonxq.cn/tags/SEO/"/>
    
  </entry>
  
  <entry>
    <title>Cent OS下网络配置的详细步骤及一些坑</title>
    <link href="http://lemonxq.cn/2017/03/04/Cent-OS%E4%B8%8B%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E7%9A%84%E8%AF%A6%E7%BB%86%E6%AD%A5%E9%AA%A4%E5%8F%8A%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
    <id>http://lemonxq.cn/2017/03/04/Cent-OS下网络配置的详细步骤及一些坑/</id>
    <published>2017-03-04T12:16:03.000Z</published>
    <updated>2017-03-04T15:49:45.659Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　本步骤基于<strong>cent os 6.5</strong>，使用的虚拟机是<strong>Virtual Box</strong>。最终可实现主机与虚拟机互ping通，虚拟机与外网互ping通。当然，如果是cent os 7.0以上或者虚拟机是VM ware的，可能会有些差异。<br><a id="more"></a></p>
<h2 id="虚拟机网络配置"><a href="#虚拟机网络配置" class="headerlink" title="虚拟机网络配置"></a>虚拟机网络配置</h2><ol>
<li><p>打开主机“网络连接”，可以看到有一块虚拟网卡（VirtualBox Host-Only Network）,双击查看<strong>详细信息</strong><br><img src="http://okwl1c157.bkt.clouddn.com/virtualbox%20hostonly%20network.png" alt=""><br><img src="http://okwl1c157.bkt.clouddn.com/detail.png" alt=""><br><strong>PS: 虚拟网卡不一定只有一块，具体可在虚拟机全局设定中进行设置，这里我选择了第二块虚拟网卡作为cent os的物理网卡。</strong></p>
</li>
<li><p>记下详细信息中<strong>网卡的IP地址</strong>（<strong>192.168.137.1</strong>）</p>
</li>
<li><p>在<strong>“网络连接”</strong>中右键选择你当前上网所用的网卡（这里我用的是无线网卡），打开属性，在<strong>“共享”</strong>一栏选择刚才的那块虚拟网卡。<br><img src="http://okwl1c157.bkt.clouddn.com/share.png" alt=""><br><strong>PS：这一步非常重要！！！目的是建立虚拟网卡与主机物理网卡的联系，从而达到共享网络的效果（个人理解类似于桥接）</strong></p>
</li>
<li><p>打开VirtualBox的<strong>全局设定</strong>，进行如下设置：<br><img src="http://okwl1c157.bkt.clouddn.com/setting-1.png" alt=""><br><img src="http://okwl1c157.bkt.clouddn.com/setting-2.png" alt=""></p>
</li>
<li>打开cent os虚拟机的设置，进行如下配置：<br><img src="http://okwl1c157.bkt.clouddn.com/network.png" alt=""><br><strong>PS：这里我使用的是Host-Only，实际上使用桥接也可以，使用桥接的话直接桥接到主机物理网卡，无须设置共享</strong><h2 id="Cent-OS中网络配置"><a href="#Cent-OS中网络配置" class="headerlink" title="Cent OS中网络配置"></a>Cent OS中网络配置</h2></li>
<li>配置<strong>ip地址</strong><br>使用命令 <strong>vi /etc/sysconfig/network-scripts/ifcfg-eth0</strong> 修改文件内容如下：<br><img src="http://okwl1c157.bkt.clouddn.com/eth0setting.png" alt=""></li>
<li>配置<strong>网关</strong><br>使用命令 <strong>vi /etc/sysconfig/network</strong> 修改文件内容如下：<br><img src="http://okwl1c157.bkt.clouddn.com/gateway.png" alt=""></li>
<li>配置<strong>DNS服务</strong><br>使用命令 <strong>vi /etc/resolv.conf</strong> 修改文件内容如下：<br><img src="http://okwl1c157.bkt.clouddn.com/dns.png" alt=""></li>
<li>重启网络服务（<strong>service network restart</strong>）</li>
</ol>
<h2 id="一些注意事项"><a href="#一些注意事项" class="headerlink" title="一些注意事项"></a>一些注意事项</h2><ol>
<li>以上步骤理论上可实现虚拟机与主机、虚拟机与外网互ping通，如果只有虚拟机ping不通主机，那么应该是主机的<strong>防火墙</strong>没有关闭，主机ping不通虚拟机也可能是这个原因。</li>
<li>如果更换网络或者对该虚拟机进行了迁移导致执行ifconfig命令后<strong>找不到eth0网卡</strong>，则只需执行以下几步：<ul>
<li>执行 <strong>ifconfig -a</strong> 命令查看虚拟机网卡（一般是<strong>eth1</strong>）地址(即<strong>HWaddr</strong>)</li>
<li>执行 <strong>vi /etc/sysconfig/network-scripts/ifcfg-eth0</strong> 修改<strong>HWaddr</strong>值为虚拟机网卡地址</li>
<li>执行 <strong>rm －rf /etc/udev/rules.d/70-persistent-net.rules</strong> 删除70-persistent-net.rules文件</li>
<li>重启系统 <strong>reboot -h now</strong></li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;　　本步骤基于&lt;strong&gt;cent os 6.5&lt;/strong&gt;，使用的虚拟机是&lt;strong&gt;Virtual Box&lt;/strong&gt;。最终可实现主机与虚拟机互ping通，虚拟机与外网互ping通。当然，如果是cent os 7.0以上或者虚拟机是VM ware的，可能会有些差异。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://lemonxq.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://lemonxq.cn/tags/Linux/"/>
    
      <category term="Cent-OS" scheme="http://lemonxq.cn/tags/Cent-OS/"/>
    
      <category term="Virtual Box" scheme="http://lemonxq.cn/tags/Virtual-Box/"/>
    
      <category term="eth0" scheme="http://lemonxq.cn/tags/eth0/"/>
    
      <category term="网络" scheme="http://lemonxq.cn/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Hello~</title>
    <link href="http://lemonxq.cn/2017/02/04/Hello/"/>
    <id>http://lemonxq.cn/2017/02/04/Hello/</id>
    <published>2017-02-04T03:26:29.000Z</published>
    <updated>2017-02-06T03:36:40.794Z</updated>
    
    <content type="html"><![CDATA[<p>你好，欢迎来到我的个人技术博客:)<br><a id="more"></a><br>可以<a href="https://lemon-xq.github.io/about/" target="_blank" rel="external">戳这里</a>了解一下我~  </p>
<p>有任何技术上的问题，欢迎一起探讨=。=<br><img src="http://okwl1c157.bkt.clouddn.com/avatar.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;你好，欢迎来到我的个人技术博客:)&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://lemonxq.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://lemonxq.cn/2017/02/03/hello-world/"/>
    <id>http://lemonxq.cn/2017/02/03/hello-world/</id>
    <published>2017-02-03T15:41:00.349Z</published>
    <updated>2017-03-05T05:02:35.968Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
      <category term="Hexo" scheme="http://lemonxq.cn/tags/Hexo/"/>
    
  </entry>
  
</feed>
